{"version":3,"sources":["assets/image/zation-logo.svg","assets/image/zationLogo.svg","assets/image/user.svg","views/loading/Loading.js","views/login/Login.js","components/sidebar/Sidebar.js","core/DataEngine.js","components/InfoCard/RTInfoCard.js","components/chart/customTooltips.js","components/RealTimeCard/RealTimeCard.js","components/RealTimeCard/BigRealTimeCard.js","views/panel/dashboard/Dashboard.js","views/panel/servers/Servers.js","components/InfoCard/InfoCard.js","components/InfoCard/BigBarCardInfo.js","views/panel/ping/Ping.js","views/panel/user/User.js","views/panel/main/MainPanel.js","views/error/Error.js","core/PingEngine.js","App.js","mode.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Loading","react_default","a","createElement","className","react_center_dist_default","react_spinners","heightUnit","widthUnit","height","width","color","Component","shake","id","document","getElementById","classList","remove","setTimeout","add","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleKeyPress","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","key","login","stop","_x","apply","arguments","state","loading","error","_this2","classes","src","Logo","alt","data-validate","onChange","setState","onKeyPress","bind","type","name","placeholder","Fab","disabled","variant","aria-label","onClick","fab","username","value","password","isOk","length","client","load","request","systemController","controller","data","onSuccessful","_callee2","_context2","_this3","app","loadPanel","onError","send","_isMount","params","get","prototype","withStyles","theme","margin","spacing","unit","extendedIcon","marginRight","Sidebar","NavLink","to","ria-current","exact","activeClassName","fa","miniSidebar","body","getElementsByTagName","sideBar","getElementsByClassName","toggle","EventEmitter","require","DataEngine","storage","clusterInfoStorage","panelAuthUserMap","defaultUserName","processClusterStorage","workerCount","instanceCount","emitter","undefined","channelReact","onPubPanelOutCh","firstPong","info","workerPing","update","processClusterInfo","startedTime","Date","now","cpuFullUsage","totalMemory","usedMemory","usedDrive","totalDrive","netInput","netOutput","brokerCount","clientCount","httpRequests","wsRequests","debug","useScUws","defaultUserGroupCount","authUserGroup","instanceId","hasOwnProperty","instance","workerFullId","serverStartedTimestamp","cpu","memory","drive","net","workers","worker","user","_processAuthUserGroup","totalMemMb","usedMemMb","totalGb","usedGb","inputMb","outputMb","authUserGroups","emit","authUserMain","group","event","_checkWorkerExists","idTarget","_getIdTarget","_updateSystemInfo","_processClusterInfo","refreshWorkerPing","res","map","k","_createWorker","hostname","port","path","postKey","secure","appName","environment","_updatePanelAuthUserMap","_updatePanelDefaultName","generalSystemInfo","cpuModel","cpuCount","platform","oos","instanceInfo","pidInfo","clearTimeout","timeout","_setWorkerTimeout","workerStartedTimestamp","_checkInstanceIsDown","count","RTInfoCard","play","big","changeTime","description","children","com","target","contains","console","log","CustomTooltips","tooltipModel","ClassName","Selector","DIV","SPAN","TOOLTIP","concat","_chart","canvas","_idMaker","Math","random","toString","_canvasId","_setCanvasId","tooltip","parentNode","appendChild","opacity","yAlign","titleLines","title","tooltipHeader","forEach","tooltipHeaderTitle","innerHTML","tooltipBody","item","lines","i","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","style","backgroundColor","split","tooltipBodyItemLabel","tooltipBodyItemValue","pop","positionY","offsetTop","positionX","offsetLeft","left","caretX","top","caretY","RealTimeCard","firstData","getData","chartOptions","spanGaps","tooltips","enabled","custom","maintainAspectRatio","legend","display","layout","padding","right","scales","xAxes","time","gridLines","zeroLineColor","ticks","fontSize","fontColor","beginAtZero","yAxes","elements","line","tension","borderWidth","point","radius","hitRadius","hoverRadius","postFix","callbacks","label","tooltipItems","yLabel","d1","d2","setMilliseconds","getMilliseconds","interval","datasets","getDataLabel","dataLabel","borderColor","x","y","isRunning","InfoCard_RTInfoCard","getValue","showTimeControl","getDescription","onTimeChange","timeChange","es","options","clearInterval","process","componentDidMount","setInterval","every","datasetsCopy","slice","dataCopy","newData","maxLength","tmpData","splice","push","updateDataSet","assign","BigRealTimeCard","labels","position","fillDataSet","assertThisInitialized","_this4","d","Dashboard","components_RealTimeCard_RealTimeCard","getClientsConnectedDesc","getClientsConnected","getWorkerDesc","getWorkerOnline","getCpuUsage","getMemoryUsage","getMemoryUsagePercent","RealTimeCard_BigRealTimeCard","v","reduce","b","getRequestData","getEngine","Number","toFixed","current","Servers","InfoCard","zeroCompensation","renderZeroCompensation","chartInstance","view","_view","context","chart","ctx","startX","beginPath","strokeStyle","moveTo","lineTo","stroke","afterDatasetsDraw","easing","meta","getDatasetMeta","dataSet","config","index","BigBarCardInfo","responsive","scaleBeginAtZero","barBeginAtOrigin","barPercentage","components_InfoCard_InfoCard","buildDataSet","plugins","redraw","Ping","mode","btnLoad","InfoCard_BigBarCardInfo","avg","refresh","sum","t0","ping","t1","sent","User","getClientCount","MainPanel","getTokenVariable","activateProcessClusterInfo","BrowserRouter","Navbar","bg","Button","switchSidebar","Brand","href","logo","switchAccountDropDown","avatar","logout","sidebar_Sidebar","Route","component","addEventListener","offAccountDropDown","preventDefault","accountDropdown","deauthenticate","window","location","pathname","Error","index_es","message","reload","PingEngine","intervalMs","pubPanelInCh","App","errorMessage","Loading_Loading","views_login_Login","panel_main_MainPanel","views_error_Error","subPanelOutCh","connect","startPing","msg","_this5","_callee3","_context3","create","parseInt","save","eventReact","onDisconnect","isConnected","setError","onServerDeauthenticate","toAuth","isAuthenticated","getTokenPanelAccess","ConnectionAbortError","Boolean","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c8c8cee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zation-logo.d46e3e57.svg\";","module.exports = __webpack_public_path__ + \"static/media/zationLogo.fe76f2a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c50d87dc.svg\";","import React, {Component} from 'react';\nimport './Loading.css';\nimport { ScaleLoader} from 'react-spinners';\nimport RCenter from 'react-center';\n\nexport default class Loading extends Component\n{\n    render() {\n        return (\n            <div className=\"App transition-item detail-page darkTheme\">\n                <RCenter className={\"fullHeight\"}>\n                    <ScaleLoader\n                        heightUnit={\"em\"}\n                        widthUnit={\"em\"}\n                        height={7}\n                        width={0.6}\n                        color={'#3099bb'}\n                    />\n                </RCenter>\n            </div>\n        );\n    }\n\n}\n\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport RCenter from \"react-center\";\nimport './Login.css'\nimport Logo from './../../assets/image/zation-logo.svg'\nimport Fab from \"@material-ui/core/es/Fab/Fab\";\nimport {load} from \"zation-client\";\nimport {ClipLoader} from 'react-spinners';\n\nconst styles = theme => ({\n    fab: {\n        margin: theme.spacing.unit\n    },\n    extendedIcon: {\n        marginRight: theme.spacing.unit,\n    },\n});\n\nconst shake = (id) => {\n    document.getElementById(id).classList.remove('shake');\n    setTimeout(() => {\n        document.getElementById(id).classList.add('shake');\n    },10);\n};\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading : false,\n            error : false\n        };\n    }\n\n    render() {\n        const { classes } = this.props;\n        const {error} = this.state;\n        return (\n            <div className=\"App transition-item detail-page darkTheme\">\n                <RCenter className={\"fullHeight\"}>\n                    <div id=\"login-co\" className={'loginContainer fadeIn animated'}>\n                    <div className={'logoContainer'}>\n                        <img src={Logo} alt={\"Zation Logo\"} width={'110em'} height={'110em'} className={'logo'}/>\n                        <h1 className={'logoText'}>LOG IN</h1>\n                    </div>\n                        <div className={'form'}>\n                            <div id=\"username-co\" className={\"wrap-input100 validate-input animated \" + (error ? 'wrap-input-error' : '')} data-validate=\"Enter username\">\n                                <input onChange={() => {this.setState({error : false})}} id=\"username\" onKeyPress={this._handleKeyPress.bind(this)}\n                                       className=\"input100\" type=\"text\" name=\"username\" placeholder=\"Username\"/>\n                                    <span className=\"focus-input100 focus-input-user\"/>\n                            </div>\n                            <div id=\"password-co\" className={\"wrap-input100 validate-input animated \"  + (error ? 'wrap-input-error' : '')} data-validate=\"Enter password\">\n                                <input onChange={() => {this.setState({error : false})}} id=\"password\" onKeyPress={this._handleKeyPress.bind(this)}\n                                       className=\"input100\" type=\"password\" name=\"username\" placeholder=\"Password\"/>\n                                <span className=\"focus-input100 focus-input-lock\"/>\n                            </div>\n                        </div>\n                        <div className={'btnContainer'}>\n                            <Fab disabled={this.state.loading} variant=\"extended\" aria-label=\"Delete\" onClick={this.login.bind(this)} className={'btn loginBtn '+classes.fab}>\n                                {!this.state.loading ? \"Login\" : <ClipLoader color={'white'}/>}\n                            </Fab>\n                        </div>\n                    </div>\n                </RCenter>\n            </div>\n        );\n    }\n\n    _handleKeyPress = async (e) => {\n        if (e.key === 'Enter') {\n            await this.login();\n        }\n    };\n\n    async login() {\n\n        const username = document.getElementById('username').value;\n        const password = document.getElementById('password').value;\n\n        let isOk = true;\n\n        if(username.length === 0){\n            isOk = false;\n            shake('username-co');\n        }\n        if(password.length === 0){\n            isOk = false;\n            shake('password-co');\n        }\n\n        if(this.state.error){\n            shake('username-co');\n            shake('password-co');\n            isOk = false;\n        }\n\n        if(isOk){\n\n            this.setState({loading : true});\n\n            const client = load();\n\n            await client.request()\n                .systemController(true)\n                .controller('zation/panel/auth')\n                .data({username : username, password : password})\n                .onSuccessful(() => {\n                    document.getElementById('login-co').classList.add('fadeOut');\n                    setTimeout(async () => {\n                        await this.props.app.loadPanel();\n                    },500);\n                })\n                .onError(() => {\n                    this.setState({error : true});\n                    shake('username-co');\n                    shake('password-co');\n                })\n                .send();\n\n            setTimeout(() => {\n                this.setState({loading : false});\n            },500);\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMount = false;\n    }\n\n    componentDidMount() {\n        this._isMount = true;\n    }\n\n    setState(params) {\n        if (this._isMount) {\n            super.setState(params);\n        }\n    }\n\n}\n\nexport default withStyles(styles)(Login);\n\n","import React, {Component} from 'react';\nimport './sidebar.css';\nimport { FaTachometerAlt, FaServer, FaUser, FaStopwatch} from 'react-icons/fa';\nimport { NavLink } from \"react-router-dom\";\n\n\nclass Sidebar extends Component {\n    render() {\n        return (\n            <div className=\"sidebar ps--active-y ps\">\n                <div className=\"scrollbar-container sidebar-nav ps ps-container ps--active-y\">\n                    <ul className=\"nav\">\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/\" className=\"nav-link\" ria-current=\"page\" exact={true} activeClassName=\"active\">\n                                <FaTachometerAlt className=\"nav-icon\"/>\n                                Dashboard</NavLink>\n                        </li>\n                        <li className=\"nav-title\">Details</li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/server\" className=\"nav-link\" ria-current=\"page\" activeClassName=\"active\">\n                                <FaServer className=\"nav-icon\"/>\n                                Server</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/user\" className=\"nav-link\" ria-current=\"page\" activeClassName=\"active\">\n                                <FaUser className=\"nav-icon\"/>\n                                User</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/ping\" className=\"nav-link\" ria-current=\"page\" activeClassName=\"active\">\n                                <FaStopwatch className=\"nav-icon\"/>\n                                Ping</NavLink>\n                        </li>\n                    </ul>\n                </div>\n                <button className=\"sidebar-minimizer mt-auto\" onClick={this.miniSidebar.bind(this)} type=\"button\">\n                </button>\n            </div>\n        )\n    }\n\n    miniSidebar(){\n        const body = document.getElementsByTagName('body')[0];\n        const sideBar = document.getElementsByClassName('sidebar')[0];\n\n        body.classList.toggle('brand-minimized');\n        body.classList.toggle('sidebar-minimized');\n\n        sideBar.classList.toggle('ps--active-y');\n        sideBar.classList.toggle('ps');\n    }\n}\n\nexport default Sidebar;\n","/*\nAuthor: Luca Scaringella\nGitHub: LucaCode\n©Copyright by Luca Scaringella\n */\n\nimport {load}        from \"zation-client\";\nconst EventEmitter = require('events');\n\nconst workerTimeout = 7000;\n\nexport default class DataEngine {\n\n    constructor() {\n        /*\n        Structure\n        instanceId ->\n            workers ->\n                workerFullId ->\n                    workerStartedTimestamp\n                    clientCount\n                    user ->\n                        defaultUserGroupCount\n                        authUserGroups ->\n                            userGroup\n                    httpRequests\n                    wsRequests\n                    cpu\n                    memory\n            brokerCount\n            hostname\n            port\n            path\n            postKey\n            secure\n            appName\n            environment\n            debug\n            useScUws\n            serverStartedTimestamp\n            cpuModel\n            cpuCount\n            platform\n            oos\n            drive ->\n                totalGb\n                usedGb\n                usedPercentage\n            memory ->\n                totalMemMb\n                usedMemMb\n            net ->\n                inputMb\n                outputMb\n            cpu\n         */\n        this.storage = {};\n        /*\n        cpu\n        memory ->\n            totalMemMb\n            usedMemMb\n        drive ->\n            totalGb\n            usedGb\n        net ->\n            inputMb\n            outputMb\n        brokerCount\n        serverStartedTimestamp\n        clientCount\n        httpRequests\n        wsRequests\n        debug\n        useScUws\n        user ->\n            defaultUserGroupCount\n            authUserGroups ->\n                userGroup\n         */\n        this.clusterInfoStorage = {};\n        /*\n        userGroupName\n         */\n        this.panelAuthUserMap = {};\n        this.defaultUserName = '';\n\n        this.processClusterStorage = false;\n        this.workerCount = 0;\n        this.instanceCount = 0;\n\n        this.emitter = new EventEmitter();\n    }\n\n    connect(key = 'default')\n    {\n        const client = load(key);\n        client.channelReact().onPubPanelOutCh('firstPong' ,(data => {\n            this.firstPong(data.id,data.info);\n        }));\n        client.channelReact().onPubPanelOutCh('ping',(data => {\n            this.workerPing(data.id);\n        }));\n        client.channelReact().onPubPanelOutCh('update-mainUpdate',(data => {\n            this.update('update-mainUpdate',data.id,data.info);\n        }));\n        client.channelReact().onPubPanelOutCh('update-workerStatus',(data => {\n            this.update('update-workerStatus',data.id,data.info);\n        }));\n    }\n\n    _processClusterInfo()\n    {\n        if(this.processClusterStorage) {\n            this.processClusterInfo();\n        }\n    }\n\n    processClusterInfo()\n    {\n        let startedTime = Date.now(),\n            cpuFullUsage = 0,\n            totalMemory = 0,\n            usedMemory = 0,\n            usedDrive = 0,\n            totalDrive = 0,\n            netInput = 0,\n            netOutput = 0,\n            brokerCount = 0,\n            clientCount = 0,\n            httpRequests = 0,\n            wsRequests = 0,\n            debug = false,\n            useScUws = true,\n            defaultUserGroupCount = 0,\n            authUserGroup = {};\n\n        for(let instanceId in this.storage) {\n            if(this.storage.hasOwnProperty(instanceId)) {\n                const instance = this.storage[instanceId];\n\n                if(instance.serverStartedTimestamp < startedTime) {\n                    startedTime = instance.serverStartedTimestamp;\n                }\n                if(instance.cpu) {\n                    cpuFullUsage+=instance.cpu;\n                }\n                if(instance.memory) {\n                    totalMemory+=instance.memory['totalMemMb'];\n                    usedMemory+=instance.memory['usedMemMb'];\n                }\n                if(instance.drive) {\n                    totalDrive+=instance.drive['totalGb'];\n                    usedDrive+=instance.drive['usedGb'];\n                }\n                if(instance.net) {\n                    netInput+=instance.net['inputMb'];\n                    netOutput+=instance.net['outputMb'];\n                }\n                brokerCount+=instance.brokerCount;\n\n                if(instance.debug) {\n                    debug = true;\n                }\n\n                if(!instance.useScUws){\n                    useScUws = false;\n                }\n\n                for(let workerFullId in instance.workers) {\n                    if(instance.workers.hasOwnProperty(workerFullId))\n                    {\n                        const worker = instance.workers[workerFullId];\n\n                        clientCount+=worker.clientCount;\n                        httpRequests+=worker.httpRequests;\n                        wsRequests+=worker.wsRequests;\n                        defaultUserGroupCount+=worker.user['defaultUserGroupCount'];\n                        this._processAuthUserGroup(authUserGroup,worker.user['authUserGroups']);\n                    }\n                }\n            }\n        }\n\n        this.clusterInfoStorage = {\n            cpu : (cpuFullUsage / this.instanceCount),\n            memory : {\n                totalMemMb : totalMemory,\n                usedMemMb : usedMemory\n            },\n            drive : {\n                totalGb : totalDrive,\n                usedGb : usedDrive\n            },\n            net : {\n                inputMb : netInput,\n                outputMb : netOutput\n            },\n            brokerCount : brokerCount,\n            serverStartedTimestamp : startedTime,\n            clientCount : clientCount,\n            httpRequests : httpRequests,\n            wsRequests : wsRequests,\n            debug : debug,\n            useScUws : useScUws,\n            user : {\n                defaultUserGroupCount : defaultUserGroupCount,\n                authUserGroups : authUserGroup\n            }\n        };\n\n        this.emitter.emit('clusterUpdate');\n    }\n\n    // noinspection JSMethodCanBeStatic\n    _processAuthUserGroup(authUserMain,authUserGroup)\n    {\n        for(let group in authUserGroup) {\n            if(authUserGroup.hasOwnProperty(group)) {\n                if(!authUserMain.hasOwnProperty(group)){\n                    authUserMain[group] = authUserGroup[group];\n                }\n                else {\n                    authUserMain[group]+=authUserGroup[group];\n                }\n            }\n        }\n    }\n\n    static getEngine() {\n        if (!DataEngine.instance) {\n            DataEngine.instance = new DataEngine();\n        }\n        return DataEngine.instance;\n    }\n\n    static reset(){\n        DataEngine.instance = new DataEngine();\n    }\n\n    update(event,id,info)\n    {\n        const instanceId = id['instanceId'];\n        const workerFullId = id['workerFullId'];\n\n        if(this._checkWorkerExists(instanceId,workerFullId))\n        {\n            const idTarget = this._getIdTarget(instanceId,workerFullId);\n            if(event === 'update-mainUpdate') {\n                this._updateSystemInfo(idTarget.instance,idTarget.worker,info['systemInfo']);\n                idTarget.worker.clientCount = info[\"clientCount\"];\n                idTarget.worker.user = info['user'];\n                this._processClusterInfo();\n                this.emitter.emit('mainUpdate',instanceId,workerFullId,idTarget);\n            }\n            else if(event === 'update-workerStatus') {\n                idTarget.worker.httpRequests = info['httpRequests'];\n                idTarget.worker.wsRequests = info['wsRequests'];\n                this._processClusterInfo();\n                this.emitter.emit('statusUpdate',instanceId,workerFullId,idTarget);\n            }\n            this.refreshWorkerPing(instanceId,workerFullId);\n        }\n    }\n\n    _checkWorkerExists(instanceId,workerFullId) {\n        let res = false;\n        if(this.storage.hasOwnProperty(instanceId) &&\n            this.storage[instanceId].workers.hasOwnProperty(workerFullId)) {\n            res = true;\n        }\n        return res;\n    }\n\n    _getIdTarget(instanceId,workerFullId) {\n        return {\n            instance : this.storage[instanceId],\n            worker : this.storage[instanceId].workers[workerFullId]\n        }\n    }\n\n    _updatePanelAuthUserMap(map)\n    {\n        if(typeof map === 'object'){\n            for(let k in map) {\n                if(map.hasOwnProperty(k) && !this.panelAuthUserMap.hasOwnProperty(k)){\n                    this.panelAuthUserMap[k] = map[k];\n                }\n            }\n        }\n    }\n\n    _updatePanelDefaultName(name) {\n        if(!this.defaultUserName) {\n            this.defaultUserName = name;\n        }\n    }\n\n    firstPong(id,info) {\n        const instanceId = id['instanceId'];\n        if(!this.storage.hasOwnProperty(instanceId)) {\n            let instance = {};\n            instance.brokerCount   = info['brokerCount'];\n            instance.hostname      = info['hostname'];\n            instance.port          = info['port'];\n            instance.path          = info['path'];\n            instance.postKey       = info['postKey'];\n            instance.secure        = info['secure'];\n            instance.appName       = info['appName'];\n            instance.environment   = info['environment'];\n            instance.debug         = info['debug'];\n            instance.useScUws      = info['useScUws'];\n            instance.serverStartedTimestamp = info['serverStartedTimestamp'];\n            this._updatePanelAuthUserMap(info['panelAuthUserMap']);\n            this._updatePanelDefaultName(info['defaultUserName']);\n            const generalSystemInfo = info['generalSystemInfo'];\n            instance.cpuModel = generalSystemInfo['cpuModel'];\n            instance.cpuCount = generalSystemInfo['cpuCount'];\n            instance.platform = generalSystemInfo['platform'];\n            instance.oos      = generalSystemInfo['oos'];\n            instance.workers = {};\n            this.storage[instanceId] = instance;\n            this.instanceCount++;\n            this.emitter.emit('newInstance',instanceId);\n            this._createWorker(instance,id,info);\n        }\n        else {\n            this._createWorker(this.storage[instanceId],id,info);\n        }\n    }\n\n    // noinspection JSMethodCanBeStatic\n    _updateSystemInfo(instance,worker,info)\n    {\n        const instanceInfo = info['instance'];\n        instance.drive = instanceInfo['drive'];\n        instance.memory = instanceInfo['memory'];\n        instance.net = instanceInfo['net'];\n        instance.cpu = instanceInfo['cpu'];\n        const pidInfo = info['pid'];\n        worker.cpu = pidInfo['cpu'];\n        worker.memory = pidInfo['memory'];\n    }\n\n\n    refreshWorkerPing(instanceId,workerFullId)\n    {\n        if(this.storage.hasOwnProperty(instanceId) &&\n            this.storage[instanceId].workers.hasOwnProperty(workerFullId)) {\n            const worker = this.storage[instanceId].workers[workerFullId];\n            clearTimeout(worker.timeout);\n            this._setWorkerTimeout(this.storage[instanceId].workers,workerFullId,instanceId);\n        }\n    }\n\n    workerPing(id) {\n        this.refreshWorkerPing(id['instanceId'],id['workerFullId']);\n        this.emitter.emit('workerPing',id['instanceId'],id['workerFullId']);\n    }\n\n    activateProcessClusterInfo() {\n        this.processClusterStorage = true;\n    }\n\n    // noinspection JSMethodCanBeStatic\n    _createWorker(instance,id,info)\n    {\n        const workers = instance.workers;\n        if(!workers.hasOwnProperty(id['workerFullId'])) {\n            let worker = {};\n            worker.workerStartedTimestamp = info['workerStartedTimestamp'];\n            worker.clientCount = info['clientCount'];\n            this._updateSystemInfo(instance,worker,info['systemInfo']);\n            worker.user = info['user'];\n            worker.httpRequests = info['httpRequests'];\n            worker.wsRequests = info['wsRequests'];\n            workers[id['workerFullId']] = worker;\n            this.workerCount++;\n            this.emitter.emit('newWorker',id['workerFullId']);\n            this._setWorkerTimeout(workers,id['workerFullId'],id['instanceId']);\n            this._processClusterInfo();\n        }\n    }\n\n    _setWorkerTimeout(workers,workerFullId,instanceId)\n    {\n        workers[workerFullId].timeout = setTimeout(() => {\n            delete workers[workerFullId];\n            this.workerCount--;\n            this.emitter.emit('workerLeft',workerFullId);\n            this._checkInstanceIsDown(instanceId);\n        },workerTimeout);\n    }\n\n    _checkInstanceIsDown(instanceId)\n    {\n        if(this.storage.hasOwnProperty(instanceId)){\n            const workers = this.storage[instanceId].workers;\n            let count = 0;\n            for(let k in workers) {\n                if(workers.hasOwnProperty(k)){\n                    count++;\n                }\n            }\n            if(count === 0) {\n                delete this.storage[instanceId];\n                this.instanceCount--;\n                this.emitter.emit('instanceLeft',instanceId);\n            }\n        }\n    }\n}\n\n","import React, {Component} from 'react';\nimport './infoCard.css'\nimport {FaPlay, FaPause} from 'react-icons/fa';\n\nconst pulse = (com) => {\n    console.log(com);\n\n    com.classList.remove('pulse');\n    setTimeout(() => {\n        com.classList.add('pulse');\n    }, 10);\n};\n\nclass RTInfoCard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            play: true\n        };\n    }\n\n    render() {\n        return (\n            <div className={\"text-white bg-info card\" + (this.props.big ? ' big-card' : '')}>\n                <div className=\"pb-0 card-body\">\n                    <div id=\"carouselButtons\">\n                        <button id=\"timeControl\" type=\"button\" className=\"btn btn-time-control animated\"\n                                onClick={this.changeTime.bind(this)}>\n                            {\n                                this.state.play ? <FaPause height={30} width={30} className=\"timeIcon\"/> :\n                                    <FaPlay height={20} width={20} className=\"timeIcon\"/>\n                            }\n                        </button>\n                    </div>\n                    <div className=\"text-value\">\n                        {this.props.value}\n                    </div>\n                    <div>\n                        {this.props.description}\n                    </div>\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n\n    changeTime(event) {\n        if (event.target.classList.contains('btn-time-control')) {\n            pulse(event.target);\n        }\n\n        this.setState({\n            play: !this.state.play\n        });\n\n        if (typeof this.props['onTimeChange'] === 'function') {\n            this.props['onTimeChange'](this.state.play);\n        }\n    }\n}\n\nexport default RTInfoCard;\n","function CustomTooltips(tooltipModel) {\n    const _setCanvasId = () => {\n        const _idMaker = () => {\n            const _hex = 16;\n            const _multiplier = 0x10000;\n            return ((1 + Math.random()) * _multiplier | 0).toString(_hex)\n        };\n        const _canvasId = `_canvas-${_idMaker() + _idMaker()}`;\n        this._chart.canvas.id = _canvasId\n        return _canvasId\n    };\n\n    const ClassName = {\n        ABOVE                   : 'above',\n        BELOW                   : 'below',\n        CHARTJS_TOOLTIP         : 'chartjs-tooltip',\n        NO_TRANSFORM            : 'no-transform',\n        TOOLTIP_BODY            : 'tooltip-body',\n        TOOLTIP_BODY_ITEM       : 'tooltip-body-item',\n        TOOLTIP_BODY_ITEM_COLOR : 'tooltip-body-item-color',\n        TOOLTIP_BODY_ITEM_LABEL : 'tooltip-body-item-label',\n        TOOLTIP_BODY_ITEM_VALUE : 'tooltip-body-item-value',\n        TOOLTIP_HEADER          : 'tooltip-header',\n        TOOLTIP_HEADER_ITEM     : 'tooltip-header-item'\n    };\n\n    const Selector = {\n        DIV     : 'div',\n        SPAN    : 'span',\n        TOOLTIP : `${this._chart.canvas.id || _setCanvasId()}-tooltip`\n    };\n\n    let tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n        tooltip = document.createElement('div');\n        tooltip.id = Selector.TOOLTIP;\n        tooltip.className = ClassName.CHARTJS_TOOLTIP;\n        this._chart.canvas.parentNode.appendChild(tooltip)\n    }\n\n    if (tooltipModel.opacity === 0) {\n        tooltip.style.opacity = 0;\n        return\n    }\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n    if (tooltipModel.yAlign) {\n        tooltip.classList.add(tooltipModel.yAlign)\n    } else {\n        tooltip.classList.add(ClassName.NO_TRANSFORM)\n    }\n\n    if (tooltipModel.body) {\n        const titleLines = tooltipModel.title || [];\n\n        const tooltipHeader = document.createElement(Selector.DIV);\n        tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n\n        titleLines.forEach((title) => {\n            const tooltipHeaderTitle = document.createElement(Selector.DIV);\n            tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n            tooltipHeaderTitle.innerHTML = title;\n            tooltipHeader.appendChild(tooltipHeaderTitle)\n        });\n\n        const tooltipBody = document.createElement(Selector.DIV);\n        tooltipBody.className = ClassName.TOOLTIP_BODY;\n\n        const tooltipBodyItems = tooltipModel.body.map((item) => item.lines);\n        tooltipBodyItems.forEach((item, i) => {\n            const tooltipBodyItem = document.createElement(Selector.DIV);\n            tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n\n            const colors = tooltipModel.labelColors[i];\n\n            const tooltipBodyItemColor = document.createElement(Selector.SPAN);\n            tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n            tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n\n            tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n            if (item[0].split(':').length > 1) {\n                const tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n                tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n                tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n\n                tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n\n                const tooltipBodyItemValue = document.createElement(Selector.SPAN);\n                tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n                tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n\n                tooltipBodyItem.appendChild(tooltipBodyItemValue)\n            } else {\n                const tooltipBodyItemValue = document.createElement(Selector.SPAN);\n                tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n                tooltipBodyItemValue.innerHTML = item[0];\n\n                tooltipBodyItem.appendChild(tooltipBodyItemValue)\n            }\n\n            tooltipBody.appendChild(tooltipBodyItem)\n        });\n\n        tooltip.innerHTML = '';\n\n        tooltip.appendChild(tooltipHeader);\n        tooltip.appendChild(tooltipBody)\n    }\n\n    const positionY = this._chart.canvas.offsetTop;\n    const positionX = this._chart.canvas.offsetLeft;\n    tooltip.style.opacity = 1;\n    tooltip.style.left = `${positionX + tooltipModel.caretX}px`;\n    tooltip.style.top = `${positionY + tooltipModel.caretY}px`;\n}\n\nexport default CustomTooltips","import React, {Component} from 'react';\nimport RTInfoCard from \"../../components/InfoCard/RTInfoCard\";\nimport {Line} from \"react-chartjs-2\";\nimport CustomTooltips from \"../../components/chart/customTooltips\";\n\nconst updateDataSet = (data,newData,maxLength = 20) =>{\n    if(data.length >= maxLength) {\n        const tmpData = data.splice(1);\n        tmpData.push(newData);\n        return tmpData;\n    }\n    else {\n        data.push(newData);\n        return data;\n    }\n};\n\nclass RealTimeCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const firstData = this.props.getData();\n\n        this.chartOptions = {\n            spanGaps : true,\n            tooltips: {\n                enabled: false,\n                custom : CustomTooltips\n            },\n            maintainAspectRatio: false,\n            legend: {\n                display: false,\n            },\n            layout: {\n                padding: {\n                    top: 8,\n                    right : 8,\n                    left : 8\n                }\n            },\n            scales: {\n                xAxes: [\n                    {\n                        type: 'time',\n                        time: {\n                            unit: 'millisecond'\n                        },\n                        gridLines: {\n                            color: 'transparent',\n                            zeroLineColor: 'transparent',\n                        },\n                        ticks: {\n                            fontSize: 2,\n                            fontColor: 'transparent',\n                            beginAtZero:true\n                        },\n\n                    }],\n                yAxes: [\n                    {\n                        display: false,\n                        ticks: {\n                            display: false\n                        },\n                    }],\n            },\n            elements: {\n                line: {\n                    tension: 0.00001,\n                    borderWidth: 1,\n                },\n                point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                },\n            }\n        };\n\n\n        if(this.props.postFix){\n            this.chartOptions.tooltips.callbacks = {\n                label: (tooltipItems) => {\n                    return tooltipItems.yLabel + ' ' + this.props.postFix;\n                }\n            };\n        }\n\n        const d1 = new Date();\n        const d2 = new Date();\n        d2.setMilliseconds(d1.getMilliseconds()+(this.interval || 1000));\n\n\n        const data = {\n            datasets: [\n                {\n                    label: this.props.getDataLabel ? this.props.getDataLabel(firstData) :\n                        (this.props.dataLabel ? this.props.dataLabel : ''),\n                    backgroundColor: 'rgba(255,255,255,.3)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [{\n                        x : d1,\n                        y : firstData\n                    },\n                    {\n                        x : d2,\n                        y : firstData\n                    }]\n                },\n            ],\n        };\n\n        this.state = {\n            value : firstData,\n            isRunning : true,\n            data : data\n        }\n    }\n\n\n    render() {\n        return (\n            <RTInfoCard value={this.getValue.bind(this)()} showTimeControl={true}\n                        description={this.getDescription.bind(this)()} onTimeChange={this.timeChange.bind(this)}>\n                <div className=\"chart-wrapper mx-3\" style={{ height: '70px'}}>\n                    <Line options={this.chartOptions} data={this.state.data} height={70}/>\n                </div>\n            </RTInfoCard>\n        )\n    }\n\n    getDescription()\n    {\n        if(this.props.description){\n            return this.props.description;\n        }\n        if(this.props.getDescription){\n            return this.props.getDescription(this.state.value);\n        }\n        else {\n            return '';\n        }\n    }\n\n    getValue() {\n        if(this.props.getValue){\n            return this.props.getValue(this.state.value);\n        }\n        else {\n            return this.props.postFix ? this.state.value + \" \" + this.props.postFix : this.state.value;\n        }\n    }\n\n    timeChange(state){\n        if(state && this.state.isRunning){\n            clearInterval(this.state.interval);\n            this.setState({isRunning : false});\n        }\n\n        if(!state && !this.state.isRunning){\n            this.process.bind(this)();\n            this.componentDidMount.bind(this)();\n        }\n    }\n\n    componentDidMount() {\n\n        const interval = setInterval(() => {\n            this.process.bind(this)();\n\n        },this.props.every || 1000);\n\n        this.setState({interval : interval,isRunning : true})\n    }\n\n    process()\n    {\n        const datasetsCopy = this.state.data.datasets.slice(0);\n        const dataCopy = datasetsCopy[0].data.slice(0);\n\n        const data = this.props.getData();\n\n        datasetsCopy[0].data = updateDataSet(dataCopy,{\n            x: new Date(),\n            y: data\n        },this.props.maxLength);\n\n        if(this.props.getDataLabel) {\n            datasetsCopy[0].label = this.props.getDataLabel(data);\n        }\n\n        this.setState({\n            value : data,\n            data : Object.assign({},{\n                datasets: datasetsCopy\n            })\n        });\n    }\n\n    componentWillUnmount() {\n        if(this.state.interval){\n            clearInterval(this.state.interval);\n        }\n    }\n}\n\nexport default RealTimeCard;\n","import React, {Component} from 'react';\nimport RTInfoCard from \"../../components/InfoCard/RTInfoCard\";\nimport {Line} from \"react-chartjs-2\";\nimport CustomTooltips from \"../../components/chart/customTooltips\";\n\nconst updateDataSet = (data,newData,maxLength = 20) =>{\n    if(data.length >= maxLength) {\n        const tmpData = data.splice(1);\n        tmpData.push(newData);\n        return tmpData;\n    }\n    else {\n        data.push(newData);\n        return data;\n    }\n};\n\nclass BigRealTimeCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.chartOptions = {\n            spanGaps : true,\n            tooltips: {\n                enabled: false,\n                custom : CustomTooltips\n            },\n            maintainAspectRatio: false,\n            legend: {\n                display: true,\n                labels : {\n                    fontColor : '#ffffff'\n                },\n                position : 'bottom'\n            },\n            layout: {\n                padding: {\n                    top: 8,\n                    right : 8,\n                    left : 8\n                }\n            },\n            scales: {\n                xAxes: [\n                    {\n                        type: 'time',\n                        time: {\n                            unit: 'millisecond'\n                        },\n                        gridLines: {\n                            color: 'transparent',\n                            zeroLineColor: 'transparent',\n                        },\n                        ticks: {\n                            fontSize: 2,\n                            fontColor: 'transparent',\n                            beginAtZero:true\n                        },\n\n                    }],\n                yAxes: [\n                    {\n                        display: false,\n                        ticks: {\n                            display: false\n                        },\n                    }],\n            },\n            elements: {\n                line: {\n                },\n                point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                },\n            }\n        };\n\n\n        if(this.props.postFix){\n            this.chartOptions.tooltips.callbacks = {\n                label: (tooltipItems) => {\n                    return tooltipItems.yLabel + ' ' + this.props.postFix;\n                }\n            };\n        }\n\n        const firstData = this.props.getData();\n\n\n        const data = {\n            datasets: [\n            ],\n        };\n\n        this.state = {\n            value : firstData,\n            isRunning : true,\n            data : data\n        };\n\n        this.fillDataSet.bind(this)();\n\n    }\n\n    fillDataSet()\n    {\n        const d1 = new Date();\n        const d2 = new Date();\n        d2.setMilliseconds(d1.getMilliseconds()+(this.interval || 1000));\n\n        this.state.value.forEach((value,i) => {\n            this.state.data.datasets.push(\n                {\n                    label: this.props.label ? this.props.label[i] : this.props.getDataLabel(value),\n                    backgroundColor: i===0 ? 'rgba(48, 153, 187,.3)' : 'rgba(43, 225, 98,.3)',\n                    borderColor: i===0 ? 'rgba(48, 153, 187,.55)' : 'rgba(43, 225, 98,.55)',\n                    data: [{\n                        x : d1,\n                        y : value\n                    },\n                        {\n                            x : d2,\n                            y : value\n                        }]\n                }\n            );\n        });\n\n    }\n\n\n    render() {\n        return (\n            <RTInfoCard value={this.getValue.bind(this)()} big={true}\n                        description={this.getDescription.bind(this)()} onTimeChange={this.timeChange.bind(this)}>\n                <div className=\"chart-wrapper mx-3\" style={{ height: '300px'}}>\n                    <Line options={this.chartOptions} data={this.state.data} height={70}/>\n                </div>\n            </RTInfoCard>\n        )\n    }\n\n    getDescription()\n    {\n        if(this.props.description){\n            return this.props.description;\n        }\n        if(this.props.getDescription){\n            return this.props.getDescription(this.state.value);\n        }\n        else {\n            return '';\n        }\n    }\n\n    getValue() {\n        if(this.props.getValue){\n            return this.props.getValue(this.state.value);\n        }\n        else {\n            return this.props.postFix ? this.state.value + \" \" + this.props.postFix : this.state.value;\n        }\n    }\n\n    timeChange(state){\n        if(state && this.state.isRunning){\n            clearInterval(this.state.interval);\n            this.setState({isRunning : false});\n        }\n\n        if(!state && !this.state.isRunning){\n            this.process.bind(this)();\n            this.componentDidMount.bind(this)();\n        }\n    }\n\n    componentDidMount() {\n\n        const interval = setInterval(() => {\n            this.process.bind(this)();\n\n        },this.props.every || 1000);\n\n        this.setState({interval : interval,isRunning : true})\n    }\n\n    process()\n    {\n        const datasetsCopy = this.state.data.datasets.slice(0);\n\n        const data = this.props.getData();\n\n        data.forEach((d,i) => {\n            const dataCopy = datasetsCopy[i].data.slice(0);\n            datasetsCopy[i].data = updateDataSet(dataCopy,{\n                x: new Date(),\n                y: d\n            },this.props.maxLength);\n\n            if(this.props.getDataLabel) {\n                datasetsCopy[i].label = this.props.getDataLabel(d);\n            }\n        });\n\n        this.setState({\n            value : data,\n            data : Object.assign({},{\n                datasets: datasetsCopy\n            })\n        });\n    }\n\n    componentWillUnmount() {\n        if(this.state.interval){\n            clearInterval(this.state.interval);\n        }\n    }\n}\n\nexport default BigRealTimeCard;\n","import React, {Component} from 'react';\nimport './dashboard.css';\nimport DataEngine from \"../../../core/DataEngine\";\nimport RealTimeCard from \"../../../components/RealTimeCard/RealTimeCard\";\nimport BigRealTimeCard from \"../../../components/RealTimeCard/BigRealTimeCard\";\n\nclass Dashboard extends Component {\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"animated fadeIn\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimeCard getDataLabel={Dashboard.getClientsConnectedDesc} getDescription={Dashboard.getClientsConnectedDesc} getData={Dashboard.getClientsConnected} every={2300}/>\n                        </div>\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimeCard dataLabel={\"Worker\"} getDescription={Dashboard.getWorkerDesc} getData={Dashboard.getWorkerOnline} every={5000} />\n                        </div>\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimeCard dataLabel={\"Cpu usage\"} description=\"Cpu usage\" getData={Dashboard.getCpuUsage} every={2300} postFix={\"%\"}/>\n                        </div>\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimeCard dataLabel={\"Memory usage\"} description=\"Memory usage\" getData={Dashboard.getMemoryUsage} every={2500} postFix={\"mb\"} getValue={Dashboard.getMemoryUsagePercent}/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-lg-12\">\n                            <BigRealTimeCard description=\"Requests in total\" label={['WebSocket Requests','HTTP Requests']}\n                                             getValue={(v) => {return v.reduce((a, b) => a + b, 0);}} getData={Dashboard.getRequestData} maxLength={40} every={1000}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    static getRequestData() {\n        return [DataEngine.getEngine().clusterInfoStorage.wsRequests,\n            DataEngine.getEngine().clusterInfoStorage.httpRequests];\n    }\n\n    static getWorkerDesc() {\n        return \"Worker online (\" + DataEngine.getEngine().instanceCount + \" Server)\"\n    }\n\n    static getClientsConnectedDesc(v) {\n        return (v > 1 || v === 0) ? \"Clients connected\" : \"Client connected\";\n    }\n\n    static getClientsConnected() {\n        return DataEngine.getEngine().clusterInfoStorage.clientCount;\n    }\n\n    static getCpuUsage() {\n        return Number(DataEngine.getEngine().clusterInfoStorage.cpu).toFixed(1);\n    }\n\n    static getMemoryUsage() {\n        return Number(DataEngine.getEngine().clusterInfoStorage.memory.usedMemMb).toFixed(1);\n    }\n\n    static getMemoryUsagePercent(current)\n    {\n        return Number((current / DataEngine.getEngine().clusterInfoStorage.memory.totalMemMb) * 100).toFixed(1) + ' %';\n    }\n\n    static getWorkerOnline() {\n        return DataEngine.getEngine().workerCount;\n    }\n\n}\n\nexport default Dashboard;\n","import React, {Component} from 'react';\nimport RCenter from \"react-center\";\n\nclass Servers extends Component {\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"animated fadeIn\">\n                    <RCenter className={\"fullHeight loaderDown\"}>\n                        <h1 style={{color : 'white'}}>This feature is available soon</h1>\n                    </RCenter>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Servers;\n","import React, {Component} from 'react';\nimport './infoCard.css'\n\nclass InfoCard extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          play : true\n        };\n    }\n\n    render() {\n        return (\n            <div className={\"text-white bg-info card\" + (this.props.big ? ' big-card' : '')}>\n                <div className=\"pb-0 card-body\">\n                    <div className=\"text-value\">\n                        {this.props.value}\n                    </div>\n                    <div>\n                        {this.props.description}\n                    </div>\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n\n}\n\nexport default InfoCard;\n","import React, {Component} from 'react';\nimport InfoCard from \"../../components/InfoCard/InfoCard\";\nimport {Bar} from \"react-chartjs-2\";\nimport CustomTooltips from \"../../components/chart/customTooltips\";\n\n\nconst zeroCompensation = {\n    renderZeroCompensation: function (chartInstance, d) {\n\n        const view = d._view;\n        const context = chartInstance.chart.ctx;\n        const startX = view.x - view.width / 2;\n        context.beginPath();\n        context.strokeStyle = '#aaaaaa';\n        context.moveTo(startX, view.y);\n        context.lineTo(startX + view.width, view.y);\n        context.stroke();\n    },\n\n    afterDatasetsDraw: function (chart, easing) {\n        const meta = chart.getDatasetMeta(0);\n        const dataSet = chart.config.data.datasets[0].data;\n        meta.data.forEach((d, index) => {\n            if(dataSet[index] === 0) {\n                this.renderZeroCompensation(chart, d)\n            }\n        })\n    }\n};\n\nclass BigBarCardInfo extends Component {\n\n    constructor(props) {\n        super(props);\n\n\n        this.chartOptions = {\n            responsive:true,\n            scaleBeginAtZero:false,\n            barBeginAtOrigin:true,\n            tooltips: {\n                enabled: false,\n                custom: CustomTooltips\n            },\n            maintainAspectRatio: false,\n            legend: {\n                display: false,\n            },\n            scales: {\n                xAxes: [\n                    {\n                        display: false,\n                        barPercentage: 0.8,\n                    }],\n                yAxes: [\n                    {\n                        display: true,\n                        beginAtZero:true\n                    }],\n            },\n        };\n\n        if(this.props.postFix){\n            this.chartOptions.tooltips.callbacks = {\n                label: (tooltipItems) => {\n                    return tooltipItems.yLabel + ' ' + this.props.postFix;\n                }\n            };\n        }\n\n    }\n\n    buildDataSet()\n    {\n        return {\n            labels: this.props.label,\n            datasets: [\n                {\n                    backgroundColor: 'rgba(48, 153, 187,1)',\n                    borderColor: 'rgba(48, 153, 187,1)',\n                    data: this.props.data\n                }\n            ],\n        };\n\n    }\n\n    render() {\n        return (\n            <InfoCard value={this.props.value} big={true}\n                      description={this.props.description}>\n                <div className=\"chart-wrapper mx-3\" style={{ height: '300px'}}>\n                    <Bar options={this.chartOptions} data={this.buildDataSet.bind(this)()} height={100} plugins={[zeroCompensation]}\n                         redraw={this.props.redraw}\n                     />\n                </div>\n            </InfoCard>\n        )\n    }\n\n}\n\nexport default BigBarCardInfo;\n","import React, {Component} from 'react';\nimport RCenter from \"react-center\";\nimport {ClipLoader, ScaleLoader} from \"react-spinners\";\nimport BigBarCardInfo from \"../../../components/InfoCard/BigBarCardInfo\";\nimport {load} from 'zation-client';\nimport Fab from \"@material-ui/core/es/Fab/Fab\";\nimport {withStyles} from \"@material-ui/core\";\nimport './ping.css';\n\nconst styles = theme => ({\n    fab: {\n        margin: theme.spacing.unit\n    },\n    extendedIcon: {\n        marginRight: theme.spacing.unit,\n    },\n});\n\nclass Ping extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            mode : 'load',\n            btnLoad : false\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const {mode} = this.state;\n        if(mode === 'load') {\n            return (\n                <div className=\"container-fluid\">\n                    <div className=\"animated fadeIn\">\n                        <RCenter className={\"fullHeight loaderDown\"}>\n                            <ScaleLoader\n                                heightUnit={\"em\"}\n                                widthUnit={\"em\"}\n                                height={7}\n                                width={0.6}\n                                color={'#3099bb'}\n                            />\n                        </RCenter>\n                    </div>\n                </div>\n            )\n        }\n        else if(mode === 'result')\n        {\n            return (\n                <div className=\"container-fluid\">\n                    <div className=\"animated fadeIn\">\n                        <BigBarCardInfo postFix={\"ms\"} label={this.state.label}\n                                        description=\"Average ping time\"\n                                        data={this.state.data} value={this.state.avg + \" ms\"}\n                                        redraw={true}\n                        />\n                    </div>\n                    <div className={'btnContainer'}>\n                        <Fab variant=\"extended\" aria-label=\"Delete\" onClick={this.refresh.bind(this)} className={'btn loginBtn '+classes.fab}>\n                            {!this.state.btnLoad ? \"Refresh\" : <ClipLoader color={'white'}/>}\n                        </Fab>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    refresh() {\n        this.setState({btnLoad : true});\n        this.process.bind(this)();\n\n    }\n\n    componentDidMount() {\n        this._isMount = true;\n        if(this.state.mode === 'load') {\n           this.process.bind(this)();\n        }\n    }\n\n    process(){\n        (async () => {\n            const client = load();\n\n            const label = [];\n            const data = [];\n\n            for(let i = 1; i < 21; i++) {\n                label.push(\"Ping \" + i);\n                data.push(await client.ping());\n            }\n\n            const sum = data.reduce(function(a, b) { return a + b; });\n\n            this.setState({\n                label : label,\n                avg : Number(sum / data.length).toFixed(2),\n                mode : 'result',\n                data : data,\n                btnLoad : false\n            });\n\n        })();\n    }\n\n    componentWillUnmount() {\n        this._isMount = false;\n    }\n\n    setState(params) {\n        if (this._isMount) {\n            super.setState(params);\n        }\n    }\n\n\n}\n\nexport default withStyles(styles)(Ping);\n","import React, {Component} from 'react';\nimport BigRealTimeCard from \"../../../components/RealTimeCard/BigRealTimeCard\";\nimport DataEngine from \"../../../core/DataEngine\";\n\nclass User extends Component {\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"animated fadeIn\">\n                    <BigRealTimeCard redraw={true} getValue={(v) => {return v[0]}}\n                                     getData={User.getClientCount} maxLength={40} every={1000}\n                                     getDataLabel={User.getClientsConnectedDesc} getDescription={User.getClientsConnectedDesc}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    static getClientsConnectedDesc(v) {\n        return (v > 1 || v === 0) ? \"Clients connected\" : \"Client connected\";\n    }\n\n    static getClientCount() {\n        return [DataEngine.getEngine().clusterInfoStorage.clientCount];\n    }\n\n}\n\nexport default User;\n","import React, {Component} from 'react';\nimport logo from '../../../assets/image/zationLogo.svg';\nimport {Navbar} from 'react-bootstrap';\nimport './MainPanel.css';\nimport Sidebar from \"../../../components/sidebar/Sidebar\";\nimport DataEngine from \"../../../core/DataEngine\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport Servers from \"../servers/Servers\";\nimport Button from \"react-bootstrap/es/Button\";\nimport avatar from './../../../assets/image/user.svg';\nimport {load} from 'zation-client';\nimport Ping from \"../ping/Ping\";\nimport User from \"../user/User\";\n\nclass MainPanel extends Component {\n\n    constructor(props) {\n        super(props);\n\n        try {\n            this.state = {name: load().getTokenVariable('ZATION-PANEL-USER-NAME')};\n\n            DataEngine.getEngine().activateProcessClusterInfo();\n            DataEngine.getEngine().processClusterInfo();\n        }\n        catch (e) {\n            this.state = {name: 'Unknown name'};\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"App transition-item detail-page sidebar-lg-show sidebar-fixed\">\n                    <header className=\"app-header\">\n                        <Navbar bg=\"dark\" variant=\"dark\">\n                            <Button className=\"navbar-toggler sidebar-toggler d-lg-none mr-auto\"\n                                    onClick={this.switchSidebar.bind(this)}>\n\n                            <span className=\"navbar-toggler-icon\">\n                            </span>\n                            </Button>\n                            <Navbar.Brand href=\"#home\" className=\"sm-auto\">\n                                <img\n                                    alt=\"\"\n                                    src={logo}\n                                    width=\"30\"\n                                    height=\"30\"\n                                    className=\"d-inline-block align-top\"\n                                />\n                                {' Zation'}\n                            </Navbar.Brand>\n                            <div className=\"profile\">\n                            <span className=\"name\">\n                                {this.state.name}\n                                </span>\n                                <li className=\"nav-item dropdown account-switch\">\n                                    <a className=\"nav-link nav-link\" href=\"/\" onClick={this.switchAccountDropDown.bind(this)}>\n                                        <img src={avatar} alt={'user'} width=\"30\" height=\"30\" className=\"account-switch\"/>\n                                    </a>\n                                    <div id=\"account-dropdown-menu\"\n                                         className=\"dropdown-menu dropdown-menu-right animated fadeIn account-switch\">\n                                        <div className=\"dropdown-header text-center account-switch\">\n                                            <strong className=\"account-switch\">\n                                                Account\n                                            </strong>\n                                        </div>\n                                        <div className=\"dropdown-item account-switch\" onClick={this.logout.bind(this)}>\n                                            <i className=\"fa fa-lock\"/>\n                                            Logout\n                                        </div>\n                                    </div>\n                                </li>\n                            </div>\n                        </Navbar>\n                    </header>\n                    <Sidebar/>\n                    <main className=\"main\">\n                        <Route exact path=\"/\" component={Dashboard}/>\n                        <Route exact path=\"/ping\" component={Ping}/>\n                        <Route exact path=\"/user\" component={User}/>\n                        <Route exact path=\"/server\" component={Servers}/>\n                    </main>\n                </div>\n            </Router>\n        )\n    }\n\n    componentDidMount() {\n        document.getElementsByTagName('body')[0].addEventListener('click',(event) => {\n            this.offAccountDropDown(event);\n        });\n    }\n\n    // noinspection JSMethodCanBeStatic\n    switchSidebar() {\n        document.getElementsByTagName('body')[0].classList.toggle('sidebar-show');\n    }\n\n    // noinspection JSMethodCanBeStatic\n    switchAccountDropDown(event) {\n        event.preventDefault();\n        document.getElementById('account-dropdown-menu').classList.toggle('show');\n    }\n\n    // noinspection JSMethodCanBeStatic\n    offAccountDropDown(event) {\n        if(!event.target.classList.contains('account-switch')) {\n            const accountDropdown = document.getElementById('account-dropdown-menu');\n            if (accountDropdown.classList.contains('show')) {\n                accountDropdown.classList.remove('show');\n            }\n        }\n    }\n\n    // noinspection JSMethodCanBeStatic\n    async logout() {\n        try{\n            const client = load();\n            await client.deauthenticate();\n        }\n        catch (e) {}\n        window.location.pathname = '';\n    }\n\n}\n\nexport default MainPanel;\n","import React, {Component} from 'react';\nimport RCenter from 'react-center';\nimport './Error.css';\nimport Fab from \"@material-ui/core/es/Fab/Fab\";\nimport {Refresh, Warning} from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    fab: {\n        margin: theme.spacing.unit\n    },\n    extendedIcon: {\n        marginRight: theme.spacing.unit,\n    },\n});\n\nclass Error extends Component\n{\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className=\"App transition-item detail-page darkTheme\">\n                <RCenter className={\"fullHeight\"}>\n                    <div className={'ErrorContainer'}>\n                        <Warning className={'warningIcon bounceInDown animated'}/>\n                        <h1>{this.props.message}</h1>\n                        <Fab variant=\"extended\" aria-label=\"Delete\" onClick={this.reload} className={'btn '+classes.fab}>\n                            <Refresh className={classes.extendedIcon} />\n                            Try again\n                        </Fab>\n                    </div>\n                </RCenter>\n            </div>\n        );\n    }\n\n    reload() {\n        document.location.reload(true)\n    }\n}\n\nexport default withStyles(styles)(Error);\n\n","/*\nAuthor: Luca Scaringella\nGitHub: LucaCode\n©Copyright by Luca Scaringella\n */\n\nimport {load}        from \"zation-client\";\n\nexport default class PingEngine {\n\n    static startPing(intervalMs = 4000,key = 'default') {\n        PingEngine.interval = setInterval(async () => {\n            try {\n                await load(key).pubPanelInCh('ping',{});\n            }\n            catch (e) {}\n        },intervalMs);\n    }\n}\n\n","import React, {Component} from 'react';\nimport {create, save, load} from \"zation-client\";\nimport {devMode} from \"./mode\";\nimport {ConnectionAbortError} from \"zation-client/dist/lib/helper/error/connectionAbortError\";\nimport Loading from \"./views/loading/Loading\";\nimport Login from \"./views/login/Login\";\nimport MainPanel from \"./views/panel/main/MainPanel\";\nimport Error from \"./views/error/Error\";\nimport DataEngine from \"./core/DataEngine\";\nimport PingEngine from \"./core/PingEngine\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode : 'start',\n            errorMessage : ''\n        };\n    }\n\n    render() {\n        if(this.state.mode === 'start' || this.state.mode === 'loadPanel') {\n            return <Loading app={this}/>\n        }\n        else if(this.state.mode === 'auth'){\n            return <Login app={this}/>\n        }\n        else if(this.state.mode === 'panel') {\n            return <MainPanel app={this}/>\n        }\n        else if(this.state.mode === 'error'){\n            return <Error app={this} message={this.state.errorMessage}/>;\n        }\n    }\n\n    async loadPanel() {\n        this.setState({mode : 'loadPanel'});\n\n        const client = load();\n\n        await client.subPanelOutCh();\n\n        //connect to dataEngine and create\n        DataEngine.getEngine().connect();\n\n        await client.pubPanelInCh('firstPing',{});\n\n        //wait 3500 ms for worker can respond\n        setTimeout(() => {\n\n            //create ping interval (worker know that panel is still in use)\n            PingEngine.startPing();\n\n            this.setState({mode : 'panel'});\n        },3500);\n    }\n\n    toAuth() {\n        if(this.state.mode === 'start') {\n            setTimeout(() => {\n                this.setState({mode : 'auth'});\n            },1500);\n        }\n        else{\n            this.setState({mode : 'auth'});\n        }\n    }\n\n    setError(msg){\n        if(this.state.mode === 'start') {\n            setTimeout(() => {\n                this.setState({mode : 'error', errorMessage : msg});\n            },1500);\n        }\n        else{\n            this.setState({mode : 'error', errorMessage : msg});\n        }\n    }\n\n    componentDidMount() {\n        this._isMount = true;\n        if(this.state.mode === 'start') {\n            (async () => {\n                const client = create(!devMode ? {\n                    hostname : window.location.hostname,\n                    port :  parseInt(window.location.port),\n                    debug : false\n                } : {});\n                save(client);\n\n                client.eventReact().onDisconnect(() => {\n                    setTimeout(()=> {\n                        if(!client.isConnected()) {\n                            this.setError('The connection to the server is lost.');\n                        }\n                    },5000)\n                });\n\n                client.eventReact().onServerDeauthenticate(() => {\n                    this.toAuth();\n                });\n\n                try {\n                    await client.connect();\n\n                    if(client.isAuthenticated() &&\n                        client.getTokenPanelAccess() &&\n                        client.getTokenVariable('ZATION-PANEL-USER-NAME')\n                    ) {\n                        (async () => {\n                            await this.loadPanel();\n                        })();\n                    }\n                    else {\n                        this.toAuth();\n                    }\n\n                }\n                catch (e) {\n                    if(e instanceof ConnectionAbortError) {\n                        this.setError('Could not connect to the server.');\n                    }\n                }\n\n            })();\n        }\n    }\n\n    componentWillMount() {\n        if(devMode && window.location.pathname !== '/') {\n            window.location.pathname = '';\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMount = false;\n    }\n\n    setState(params) {\n        if (this._isMount) {\n            super.setState(params);\n        }\n    }\n\n}\n\nexport default App;\n","export const devMode = false;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport './assets/libs/animate.css'\nimport './assets/libs/all.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}