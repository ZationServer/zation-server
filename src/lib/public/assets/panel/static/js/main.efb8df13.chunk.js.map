{"version":3,"sources":["assets/image/zation-logo.svg","assets/image/zationLogo.svg","views/loading/Loading.js","views/login/Login.js","components/sidebar/sidebar.js","views/panel/main/MainPanel.js","views/error/Error.js","App.js","mode.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Loading","react_default","a","createElement","className","react_center_dist_default","react_spinners","heightUnit","widthUnit","height","width","color","Component","shake","id","document","getElementById","classList","remove","setTimeout","add","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleKeyPress","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","key","login","stop","_x","apply","arguments","state","loading","error","_this2","classes","src","Logo","alt","data-validate","onChange","setState","onKeyPress","bind","type","name","placeholder","Fab","disabled","variant","aria-label","onClick","fab","username","value","password","isOk","length","client","load","request","systemController","controller","data","onSuccessful","_this3","app","loadPanel","onError","send","withStyles","theme","margin","spacing","unit","extendedIcon","marginRight","Sidebar","MainPanel","Navbar","bg","Brand","href","logo","sidebar_sidebar","Error","index_es","message","reload","location","App","mode","errorMessage","Loading_Loading","views_login_Login","panel_main_MainPanel","views_error_Error","msg","_this4","_this5","create","hostname","window","port","parseInt","debug","save","eventReact","onDisconnect","isConnected","setError","onServerDeauthenticate","toAuth","connect","isAuthenticated","getTokenPanelAccess","getTokenVariable","t0","ConnectionAbortError","Boolean","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efb8df13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zation-logo.d46e3e57.svg\";","module.exports = __webpack_public_path__ + \"static/media/zationLogo.fe76f2a9.svg\";","import React, {Component} from 'react';\nimport './Loading.css';\nimport { ScaleLoader} from 'react-spinners';\nimport RCenter from 'react-center';\n\nexport default class Loading extends Component\n{\n    render() {\n        return (\n            <div className=\"App transition-item detail-page darkTheme\">\n                <RCenter className={\"fullHeight\"}>\n                    <ScaleLoader\n                        heightUnit={\"em\"}\n                        widthUnit={\"em\"}\n                        height={7}\n                        width={0.6}\n                        color={'#3099bb'}\n                    />\n                </RCenter>\n            </div>\n        );\n    }\n\n}\n\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport RCenter from \"react-center\";\nimport './Login.css'\nimport Logo from './../../assets/image/zation-logo.svg'\nimport Fab from \"@material-ui/core/es/Fab/Fab\";\nimport {load} from \"zation-client\";\nimport {ClipLoader} from 'react-spinners';\n\nconst styles = theme => ({\n    fab: {\n        margin: theme.spacing.unit\n    },\n    extendedIcon: {\n        marginRight: theme.spacing.unit,\n    },\n});\n\nconst shake = (id) => {\n    document.getElementById(id).classList.remove('shake');\n    setTimeout(() => {\n        document.getElementById(id).classList.add('shake');\n    },10);\n};\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading : false,\n            error : false\n        };\n    }\n\n    render() {\n        const { classes } = this.props;\n        const {error} = this.state;\n        return (\n            <div className=\"App transition-item detail-page darkTheme\">\n                <RCenter className={\"fullHeight\"}>\n                    <div id=\"login-co\" className={'loginContainer fadeIn animated'}>\n                    <div className={'logoContainer'}>\n                        <img src={Logo} alt={\"Zation Logo\"} width={'110em'} height={'110em'} className={'logo'}/>\n                        <h1 className={'logoText'}>LOG IN</h1>\n                    </div>\n                        <div className={'form'}>\n                            <div id=\"username-co\" className={\"wrap-input100 validate-input animated \" + (error ? 'wrap-input-error' : '')} data-validate=\"Enter username\">\n                                <input onChange={() => {this.setState({error : false})}} id=\"username\" onKeyPress={this._handleKeyPress.bind(this)}\n                                       className=\"input100\" type=\"text\" name=\"username\" placeholder=\"Username\"/>\n                                    <span className=\"focus-input100 focus-input-user\"/>\n                            </div>\n                            <div id=\"password-co\" className={\"wrap-input100 validate-input animated \"  + (error ? 'wrap-input-error' : '')} data-validate=\"Enter password\">\n                                <input onChange={() => {this.setState({error : false})}} id=\"password\" onKeyPress={this._handleKeyPress.bind(this)}\n                                       className=\"input100\" type=\"password\" name=\"username\" placeholder=\"Password\"/>\n                                <span className=\"focus-input100 focus-input-lock\"/>\n                            </div>\n                        </div>\n                        <div className={'btnContainer'}>\n                            <Fab disabled={this.state.loading} variant=\"extended\" aria-label=\"Delete\" onClick={this.login.bind(this)} className={'btn loginBtn '+classes.fab}>\n                                {!this.state.loading ? \"Login\" : <ClipLoader color={'white'}/>}\n                            </Fab>\n                        </div>\n                    </div>\n                </RCenter>\n            </div>\n        );\n    }\n\n    _handleKeyPress = async (e) => {\n        if (e.key === 'Enter') {\n            await this.login();\n        }\n    };\n\n    async login() {\n\n        const username = document.getElementById('username').value;\n        const password = document.getElementById('password').value;\n\n        let isOk = true;\n\n        if(username.length === 0){\n            isOk = false;\n            shake('username-co');\n        }\n        if(password.length === 0){\n            isOk = false;\n            shake('password-co');\n        }\n\n        if(this.state.error){\n            shake('username-co');\n            shake('password-co');\n            isOk = false;\n        }\n\n        if(isOk){\n\n            this.setState({loading : true});\n\n            const client = load();\n\n            await client.request()\n                .systemController(true)\n                .controller('zation/panel/auth')\n                .data({username : username, password : password})\n                .onSuccessful(() => {\n                    document.getElementById('login-co').classList.add('fadeOut');\n                    setTimeout(() => {\n                        this.props.app.loadPanel();\n                    },500);\n                })\n                .onError(() => {\n                    this.setState({error : true});\n                    shake('username-co');\n                    shake('password-co');\n                })\n                .send();\n\n            this.setState({loading : false});\n        }\n    }\n\n}\n\nexport default withStyles(styles)(Login);\n\n","import React, {Component} from 'react';\nimport './sidebar.css';\n\n\nclass Sidebar extends Component {\n    render() {\n        return (\n            <div className=\"sidebar\">\n\n            </div>\n        )\n    }\n}\n\nexport default Sidebar;\n","import React, {Component} from 'react';\nimport logo from '../../../assets/image/zationLogo.svg';\nimport {Navbar} from 'react-bootstrap';\nimport { SideNav, Nav } from 'react-sidenav'\nimport './MainPanel.css';\nimport {Icon} from \"@blueprintjs/core\";\nimport { FaServer } from 'react-icons/fa';\nimport Sidebar from \"../../../components/sidebar/sidebar\";\n\nclass MainPanel extends Component {\n    render() {\n        return (\n            <div className=\"App transition-item detail-page\">\n                <header className=\"App-header\">\n                    <Navbar bg=\"dark\" variant=\"dark\">\n                        <Navbar.Brand href=\"#home\">\n                            <img\n                                alt=\"\"\n                                src={logo}\n                                width=\"30\"\n                                height=\"30\"\n                                className=\"d-inline-block align-top\"\n                            />\n                            {' Zation'}\n                        </Navbar.Brand>\n                    </Navbar>\n                </header>\n                <Sidebar/>\n            </div>\n        )\n    }\n}\n\nexport default MainPanel;\n","import React, {Component} from 'react';\nimport RCenter from 'react-center';\nimport './Error.css';\nimport Fab from \"@material-ui/core/es/Fab/Fab\";\nimport {Refresh, Warning} from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    fab: {\n        margin: theme.spacing.unit\n    },\n    extendedIcon: {\n        marginRight: theme.spacing.unit,\n    },\n});\n\nclass Error extends Component\n{\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className=\"App transition-item detail-page darkTheme\">\n                <RCenter className={\"fullHeight\"}>\n                    <div className={'ErrorContainer'}>\n                        <Warning className={'warningIcon bounceInDown animated'}/>\n                        <h1>{this.props.message}</h1>\n                        <Fab variant=\"extended\" aria-label=\"Delete\" onClick={this.reload} className={'btn '+classes.fab}>\n                            <Refresh className={classes.extendedIcon} />\n                            Try again\n                        </Fab>\n                    </div>\n                </RCenter>\n            </div>\n        );\n    }\n\n    reload() {\n        document.location.reload(true)\n    }\n}\n\nexport default withStyles(styles)(Error);\n\n","import React, {Component} from 'react';\nimport {create, save} from \"zation-client\";\nimport {devMode} from \"./mode\";\nimport {ConnectionAbortError} from \"zation-client/dist/lib/helper/error/connectionAbortError\";\nimport Loading from \"./views/loading/Loading\";\nimport Login from \"./views/login/Login\";\nimport MainPanel from \"./views/panel/main/MainPanel\";\nimport Error from \"./views/error/Error\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode : 'start',\n            errorMessage : ''\n        };\n    }\n\n    render() {\n        if(this.state.mode === 'start' || this.state.mode === 'loadPanel') {\n            return <Loading app={this}/>\n        }\n        else if(this.state.mode === 'auth'){\n            return <Login app={this}/>\n        }\n        else if(this.state.mode === 'panel') {\n            return <MainPanel app={this}/>\n        }\n        else if(this.state.mode === 'error'){\n            return <Error app={this} message={this.state.errorMessage}/>;\n        }\n    }\n\n    loadPanel() {\n        this.setState({mode : 'loadPanel'});\n\n\n        //send first ping, sub panel out channel collect data\n        setTimeout(() => {\n            this.setState({mode : 'panel'});\n        },2500);\n    }\n\n    toAuth() {\n        if(this.state.mode === 'start') {\n            setTimeout(() => {\n                this.setState({mode : 'auth'});\n            },1500);\n        }\n        else{\n            this.setState({mode : 'auth'});\n        }\n    }\n\n    setError(msg){\n        if(this.state.mode === 'start') {\n            setTimeout(() => {\n                this.setState({mode : 'error', errorMessage : msg});\n            },1500);\n        }\n        else{\n            this.setState({mode : 'error', errorMessage : msg});\n        }\n    }\n\n    componentDidMount() {\n\n        if(this.state.mode === 'start') {\n            (async () => {\n                const client = create(!devMode ? {\n                    hostname : window.location.hostname,\n                    port :  parseInt(window.location.port),\n                    debug : false\n                } : {});\n                save(client);\n\n                client.eventReact().onDisconnect(() => {\n                    setTimeout(()=> {\n                        if(!client.isConnected()) {\n                            this.setError('The connection to the server is lost.');\n                        }\n                    },5000)\n                });\n\n                client.eventReact().onServerDeauthenticate(() => {\n                    this.toAuth();\n                });\n\n                try {\n                    await client.connect();\n\n                    if(client.isAuthenticated() &&\n                        client.getTokenPanelAccess() &&\n                        client.getTokenVariable('ZATION-PANEL-USER-NAME')\n                    ) {\n                        this.loadPanel();\n                    }\n                    else {\n                        this.toAuth();\n                    }\n\n                }\n                catch (e) {\n                    if(e instanceof ConnectionAbortError) {\n                        this.setError('Could not connect to the server.');\n                    }\n                }\n\n            })();\n        }\n    }\n\n    componentWillMount() {\n        if(devMode && window.location.pathname !== '/') {\n            window.location.pathname = '';\n        }\n    }\n}\n\nexport default App;\n","export const devMode = false;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport './assets/libs/animate.css'\nimport './assets/libs/all.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}