{"version":3,"sources":["assets/image/zation-logo.svg","assets/image/zationLogo.svg","assets/image/user.svg","views/loading/Loading.js","views/login/Login.js","core/PathTool.js","components/sidebar/Sidebar.js","core/DataEngine.js","components/infoCard/RTInfoCard.js","components/chartTools/customTooltips.js","components/realTimeCardCharts/RealTimeFunc.js","components/realTimeCardCharts/RealTimeCard.js","components/realTimeCardCharts/BigRealTimeCard.js","components/realTimeCardCharts/RealTimePercentCard.js","components/realTimeCardCharts/RealTimeNetworkCard.js","views/panel/dashboard/Dashboard.js","components/realTimeCardCharts/RTTableCard.js","core/Time.js","components/chartTools/TableProgressRow.js","components/chartTools/TableAgeRow.js","views/panel/servers/Server.js","components/infoCard/InfoCard.js","components/chartTools/barZeroCompensation.js","components/infoCard/BigBarCardInfo.js","views/panel/ping/Ping.js","components/realTimeCardCharts/RTPieCard.js","components/realTimeCardCharts/RTSwitchBarCard.js","views/panel/clients/Clients.js","core/ObjTool.js","components/realTimeCardCharts/RTServerInfoCard.js","views/panel/servers/ServerDetail.js","views/panel/main/MainPanel.js","views/error/Error.js","core/PingEngine.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Loading","react_default","a","createElement","className","react_center_dist_default","react_spinners","heightUnit","widthUnit","height","width","color","Component","shake","id","document","getElementById","classList","remove","setTimeout","add","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleKeyPress","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","key","login","stop","_x","apply","arguments","state","loading","error","_this2","classes","src","Logo","alt","data-validate","onChange","setState","onKeyPress","bind","type","name","placeholder","Fab","disabled","variant","aria-label","onClick","fab","username","value","password","isOk","length","client","request","data","onSuccessful","_callee2","_context2","_this3","app","loadPanel","onError","send","_isMount","params","get","prototype","withStyles","theme","margin","spacing","unit","extendedIcon","marginRight","PathTool","path","substring","lastIndexOf","restPath","mainPath","Sidebar","NavLink","to","ria-current","exact","activeClassName","fa","miniSidebar","body","getElementsByTagName","sideBar","getElementsByClassName","toggle","EventEmitter","require","DataEngine","storage","clusterInfoStorage","panelAuthUserMap","defaultUserName","clusterBrokerList","workerCount","instanceCount","emitter","setWorkerTimeoutChecker","channel","onPublish","firstPong","update","startedTime","Date","now","cpuFullUsage","totalMemory","usedMemory","brokerCount","clientCount","httpRequests","wsRequests","debug","defaultUserGroupCount","panelUserCount","authUserGroup","stateServerActive","instanceId","hasOwnProperty","instance","workerFullId","serverStartedTimestamp","cpu","memory","master","workers","worker","user","_processAuthUserGroup","totalMemMb","usedMemMb","authUserGroups","emit","authUserMain","group","event","info","_checkWorkerExists","idTarget","_getIdTarget","_updateSystemInfo","brokers","refreshWorkerPing","res","map","k","_createWorker","hostname","port","secure","appName","wsEngine","nodeVersion","license","zationServerVersion","ip","_updatePanelAuthUserMap","_updatePanelDefaultName","generalSystemInfo","cpuModel","cpuCount","platform","oos","instanceInfo","drive","pidInfo","timeout","setInterval","processClusterInfo","workerStartedTimestamp","aWorkerIsDown","workerId","_checkInstanceIsDown","count","pulse","node","RTInfoCard","btnSwitchId","btnTimeId","defaultSwitch","switchDefault","play","switch","style","minHeight","big","green","Tooltip_default","title","changeTime","switchTooltip","btnSwitch","undefined","description","children","CustomTooltips","tooltipModel","ClassName","Selector","DIV","SPAN","TOOLTIP","concat","_chart","canvas","_idMaker","Math","random","toString","_canvasId","_setCanvasId","tooltip","parentNode","appendChild","opacity","yAlign","titleLines","tooltipHeader","forEach","tooltipHeaderTitle","innerHTML","tooltipBody","item","lines","i","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","backgroundColor","split","tooltipBodyItemLabel","tooltipBodyItemValue","pop","positionY","offsetTop","positionX","offsetLeft","left","caretX","top","caretY","updateDataSet","newData","maxLength","push","shift","RealTimeCard","firstData","getData","chartOptions","animation","spanGaps","tooltips","enabled","custom","maintainAspectRatio","legend","display","layout","padding","right","scales","xAxes","time","gridLines","zeroLineColor","ticks","fontSize","fontColor","beginAtZero","yAxes","elements","line","tension","borderWidth","point","radius","hitRadius","hoverRadius","postFix","callbacks","label","tooltipItems","yLabel","d1","d2","setMilliseconds","getMilliseconds","every","datasets","getDataLabel","dataLabel","borderColor","x","y","currentData","running","chartData","infoCard_RTInfoCard","getValue","showTimeControl","getDescription","onTimeChange","timeChange","es","options","tmpNewData","tmpCurrentData","tmpChartData","process","interval","datasetsCopy","slice","dataCopy","assign","clearInterval","BigRealTimeCard","labels","position","fillDataSet","assertThisInitialized","_this4","_this5","d","RealTimePercentCard","getPercent","isRunning","aria-valuemin","aria-valuemax","componentDidMount","nodeHtmlLabel","cytoscape","use","euler","layoutOptions","animate","randomize","pull","theta","RealTimeNetworkCard","_processData","ids","_datasetIds","_runBuildCommands","_buildCommands","edges","nodes","addNodes","addEdges","indexOf","index","splice","removeIds","commands","cy","startBatch","changes","run","endBatch","instances","getEngine","masterId","clusterBrokersList","showClusterBrokers","showClusterState","clusterBrokers","Array","isArray","v","nodeId","nodeMasterId","masterClass","source","target","workerNodeId","brokerId","brokerNodeId","container","selector","background-color","line-color","query","valign","halign","valignBox","halignBox","tpl","Dashboard","realTimeCardCharts_RealTimeCard","getClientsConnectedDesc","getClientsConnected","getWorkerDesc","getWorkerOnline","realTimeCardCharts_RealTimePercentCard","getCpuUsage","getMemoryUsage","getMemoryUsagePercent","realTimeCardCharts_BigRealTimeCard","reduce","b","getRequestData","realTimeCardCharts_RealTimeNetworkCard","Number","toFixed","current","createMuiTheme","typography","useNextVariants","overrides","MuiPaper","root","boxShadow","MuiTableCell","fontFamily","MuiTableSortLabel","&:hover","&:focus","active","MuiIconButton","outline","RTTableCard","styles","material_table_default","actions","columns","paging","toolbar","headerStyle","Time","timestamp","toLocaleString","dateStyle","timeStyle","timespan","parseInt","TableProgressRow","progress","maxWidth","textAlign","TableAgeRow","processAge","rowData","age","processDate","started","serverTableColumns","field","filtering","render","leader","chartTools_TableAgeRow","chartTools_TableProgressRow","Server","realTimeCardCharts_RTTableCard","icon","FaInfoCircle","history","iconProps","getServerTableData","dataset","reqCount","isLeader","processTimeSpan","requestCount","InfoCard","extraBig","zeroCompensation","renderZeroCompensation","chartInstance","view","_view","context","chart","ctx","startX","beginPath","strokeStyle","moveTo","lineTo","stroke","afterDatasetsDraw","easing","meta","getDatasetMeta","dataSet","config","BigBarCardInfo","scaleBeginAtZero","barBeginAtOrigin","barPercentage","suggestedMin","min","infoCard_InfoCard","buildDataSet","plugins","redraw","Ping","mode","btnLoad","infoCard_BigBarCardInfo","avg","refresh","rawData","sum","t0","ping","t1","sent","bottom","RTPieCard","RTSwitchBarCard","callback","isInteger","stepSize","getSwitchDefault","getSwitchTooltip","_this$state","onSwitchChange","switchChange","Clients","getClientCount","realTimeCardCharts_RTPieCard","getPieUserGroupsData","getPieUserGroupsValue","realTimeCardCharts_RTSwitchBarCard","getClientDistributionData","getClientDistributionSwitchDefault","getClientDistributionDesc","instanceNum","hoverBackgroundColor","dataEngine","_addGroup","auth","formatUserGroupName","replace","match","toUpperCase","keys","ObjTool","obj","RTServerInfoCard","broker","licenseType","driveUsage","countKeys","usedPercentage","h","l","t","mi","workerTableColumns","brokerTableColumns","ServerDetail","realTimeCardCharts_RTServerInfoCard","getRequestsDesc","getRequest","getMemoryUsageValue","getWorkerTableData","getBrokerTableData","bId","brokerStartedTimestamp","system","wId","Chart","defaults","global","duration","MainPanel","payload","tokenPayload","setTaskProcessClusterInfo","BrowserRouter","Navbar","bg","Button","switchSidebar","Brand","href","logo","switchAccountDropDown","avatar","logout","sidebar_Sidebar","Route","component","addEventListener","offAccountDropDown","preventDefault","contains","accountDropdown","deauthenticate","window","location","pathname","getMainPath","Error","index_es","message","reload","PingEngine","intervalMs","hasPanelAccess","transmit","App","errorMessage","Loading_Loading","views_login_Login","panel_main_MainPanel","views_error_Error","panelCh","subscribe","connect","startPing","msg","_callee3","_context3","create","protocol","rejectUnauthorized","eventReact","onDisconnect","isConnected","setError","onServerDeauthenticate","toAuth","ConnectionAbortError","isNotMainPath","Boolean","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2730acb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zation-logo.d46e3e57.svg\";","module.exports = __webpack_public_path__ + \"static/media/zationLogo.fe76f2a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c50d87dc.svg\";","import React, {Component} from 'react';\nimport './Loading.css';\nimport { ScaleLoader} from 'react-spinners';\nimport RCenter from 'react-center';\n\nexport default class Loading extends Component\n{\n    render() {\n        return (\n            <div className=\"App transition-item detail-page darkTheme\">\n                <RCenter className={\"fullHeight\"}>\n                    <ScaleLoader\n                        heightUnit={\"em\"}\n                        widthUnit={\"em\"}\n                        height={7}\n                        width={0.6}\n                        color={'#3099bb'}\n                    />\n                </RCenter>\n            </div>\n        );\n    }\n\n}\n\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport RCenter from \"react-center\";\nimport './Login.css'\nimport Logo from './../../assets/image/zation-logo.svg'\nimport Fab from \"@material-ui/core/es/Fab/Fab\";\nimport {client} from \"zation-client\";\nimport {ClipLoader} from 'react-spinners';\n\nconst styles = theme => ({\n    fab: {\n        margin: theme.spacing.unit\n    },\n    extendedIcon: {\n        marginRight: theme.spacing.unit,\n    },\n});\n\nconst shake = (id) => {\n    document.getElementById(id).classList.remove('shake');\n    setTimeout(() => {\n        document.getElementById(id).classList.add('shake');\n    },10);\n};\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading : false,\n            error : false\n        };\n    }\n\n    render() {\n        const { classes } = this.props;\n        const {error} = this.state;\n        return (\n            <div className=\"App transition-item detail-page darkTheme\">\n                <RCenter className={\"fullHeight\"}>\n                    <div id=\"login-co\" className={'loginContainer fadeIn animated'}>\n                    <div className={'logoContainer'}>\n                        <img src={Logo} alt={\"Zation Logo\"} width={'110em'} height={'110em'} className={'logo'}/>\n                        <h1 className={'logoText'}>LOG IN</h1>\n                    </div>\n                        <div className={'form'}>\n                            <div id=\"username-co\" className={\"wrap-input100 validate-input animated \" + (error ? 'wrap-input-error' : '')} data-validate=\"Enter username\">\n                                <input onChange={() => {this.setState({error : false})}} id=\"username\" onKeyPress={this._handleKeyPress.bind(this)}\n                                       className=\"input100\" type=\"text\" name=\"username\" placeholder=\"Username\"/>\n                                    <span className=\"focus-input100 focus-input-user\"/>\n                            </div>\n                            <div id=\"password-co\" className={\"wrap-input100 validate-input animated \"  + (error ? 'wrap-input-error' : '')} data-validate=\"Enter password\">\n                                <input onChange={() => {this.setState({error : false})}} id=\"password\" onKeyPress={this._handleKeyPress.bind(this)}\n                                       className=\"input100\" type=\"password\" name=\"username\" placeholder=\"Password\"/>\n                                <span className=\"focus-input100 focus-input-lock\"/>\n                            </div>\n                        </div>\n                        <div className={'btnContainer'}>\n                            <Fab disabled={this.state.loading} variant=\"extended\" aria-label=\"Delete\" onClick={this.login.bind(this)} className={'btn loginBtn '+classes.fab}>\n                                {!this.state.loading ? \"Login\" : <ClipLoader color={'white'}/>}\n                            </Fab>\n                        </div>\n                    </div>\n                </RCenter>\n            </div>\n        );\n    }\n\n    _handleKeyPress = async (e) => {\n        if (e.key === 'Enter') {\n            await this.login();\n        }\n    };\n\n    async login() {\n\n        const username = document.getElementById('username').value;\n        const password = document.getElementById('password').value;\n\n        let isOk = true;\n\n        if(username.length === 0){\n            isOk = false;\n            shake('username-co');\n        }\n        if(password.length === 0){\n            isOk = false;\n            shake('password-co');\n        }\n\n        if(this.state.error){\n            shake('username-co');\n            shake('password-co');\n            isOk = false;\n        }\n\n        if(isOk){\n            this.setState({loading : true});\n\n            await client.request('#panel/auth')\n                .data({username : username, password : password})\n                .onSuccessful(() => {\n                    document.getElementById('login-co').classList.add('fadeOut');\n                    setTimeout(async () => {\n                        await this.props.app.loadPanel();\n                    },500);\n                })\n                .onError(() => {\n                    this.setState({error : true});\n                    shake('username-co');\n                    shake('password-co');\n                })\n                .send();\n\n            setTimeout(() => {\n                this.setState({loading : false});\n            },500);\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMount = false;\n    }\n\n    componentDidMount() {\n        this._isMount = true;\n    }\n\n    setState(params) {\n        if (this._isMount) {\n            super.setState(params);\n        }\n    }\n\n}\n\nexport default withStyles(styles)(Login);\n\n","/*\nAuthor: Luca Scaringella\nGitHub: LucaCode\n©Copyright by Luca Scaringella\n */\n\nexport default class PathTool {\n\n    static getMainPath(path){\n        return path.substring(0,(path.lastIndexOf('/panel')+6));\n    }\n\n    static isNotMainPath(path){\n        const restPath = path.substring(path.lastIndexOf('/panel')+6);\n        return restPath !== '' && restPath !== '/'\n    }\n}\n\nPathTool.mainPath = '';\n\n","import React, {Component} from 'react';\nimport './sidebar.css';\nimport { FaTachometerAlt, FaServer, FaUser, FaStopwatch} from 'react-icons/fa';\nimport { NavLink } from \"react-router-dom\";\nimport PathTool from \"../../core/PathTool\";\n\nclass Sidebar extends Component {\n    render() {\n        return (\n            <div className=\"sidebar ps--active-y ps\">\n                <div className=\"scrollbar-container sidebar-nav ps ps-container ps--active-y\">\n                    <ul className=\"nav\">\n                        <li className=\"nav-item\">\n                            <NavLink to={PathTool.mainPath+\"/\"} className=\"nav-link\" ria-current=\"page\" exact={true} activeClassName=\"active\">\n                                <FaTachometerAlt className=\"nav-icon\"/>\n                                Overview</NavLink>\n                        </li>\n                        <li className=\"nav-title\">Details</li>\n                        <li className=\"nav-item\">\n                            <NavLink to={PathTool.mainPath+\"/server\"} className=\"nav-link\" ria-current=\"page\" activeClassName=\"active\">\n                                <FaServer className=\"nav-icon\"/>\n                                Server</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to={PathTool.mainPath+\"/clients\"} className=\"nav-link\" ria-current=\"page\" activeClassName=\"active\">\n                                <FaUser className=\"nav-icon\"/>\n                                Clients</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to={PathTool.mainPath+\"/ping\"} className=\"nav-link\" ria-current=\"page\" activeClassName=\"active\">\n                                <FaStopwatch className=\"nav-icon\"/>\n                                Ping</NavLink>\n                        </li>\n                    </ul>\n                </div>\n                <button className=\"sidebar-minimizer mt-auto\" onClick={this.miniSidebar.bind(this)} type=\"button\">\n                </button>\n            </div>\n        )\n    }\n\n    // noinspection JSMethodCanBeStatic\n    miniSidebar(){\n        const body = document.getElementsByTagName('body')[0];\n        const sideBar = document.getElementsByClassName('sidebar')[0];\n\n        body.classList.toggle('brand-minimized');\n        body.classList.toggle('sidebar-minimized');\n\n        sideBar.classList.toggle('ps--active-y');\n        sideBar.classList.toggle('ps');\n    }\n}\n\nexport default Sidebar;\n","/*\nAuthor: Luca Scaringella\nGitHub: LucaCode\n©Copyright by Luca Scaringella\n */\n\nconst EventEmitter = require('events');\n\nconst workerCheckTime = 7000;\nconst workerTimeout = 5000;\n\nexport default class DataEngine {\n\n    constructor() {\n        /*\n        Structure\n        instanceId ->\n            workers ->\n                workerFullId ->\n                    id\n                    workerStartedTimestamp\n                    clientCount\n                    user ->\n                        panelUserCount\n                        defaultUserGroupCount\n                        authUserGroups ->\n                            userGroup\n                    httpRequests\n                    wsRequests\n                    cpu\n                    memory\n            brokerCount\n            brokers ->\n                id ->\n                    pid\n                    system ->\n                        cpu\n                        memory\n                    brokerStartedTimestamp\n            master ->\n                isLeader\n                pid\n                clusterMode\n                stateServerConnected\n            hostname\n            port\n            path\n            secure\n            appName\n            debug\n            wsEngine\n            nodeVersion\n            zationServerVersion\n            license\n            serverStartedTimestamp\n            ip\n            cpuModel\n            cpuCount\n            platform\n            oos\n            drive ->\n                totalGb\n                usedGb\n                usedPercentage\n            memory ->\n                totalMemMb\n                usedMemMb\n            cpu\n         */\n        this.storage = {};\n        /*\n        cpu\n        memory ->\n            totalMemMb\n            usedMemMb\n        brokerCount\n        serverStartedTimestamp\n        clientCount\n        httpRequests\n        wsRequests\n        debug\n        stateServerActive\n        user ->\n            defaultUserGroupCount\n            panelUserCount\n            authUserGroups ->\n                userGroup\n         */\n        this.clusterInfoStorage = {};\n        /*\n        userGroupName\n         */\n        this.panelAuthUserMap = {};\n        this.defaultUserName = '';\n\n        this.clusterBrokerList = [];\n\n        this.workerCount = 0;\n        this.instanceCount = 0;\n\n        this.emitter = new EventEmitter();\n        this.setWorkerTimeoutChecker();\n    }\n\n    connect(channel)\n    {\n        channel.onPublish('firstPong' ,(data => {\n            this.firstPong(data[0],data[1]);\n        }));\n        channel.onPublish('up',(data => {\n            this.update('up',data[0],data[1]);\n        }));\n        channel.onPublish('up-l',(data => {\n            this.update('up-l',data[0],data[1]);\n        }));\n    }\n\n    processClusterInfo()\n    {\n        let startedTime = Date.now(),\n            cpuFullUsage = 0,\n            totalMemory = 0,\n            usedMemory = 0,\n            brokerCount = 0,\n            clientCount = 0,\n            httpRequests = 0,\n            wsRequests = 0,\n            debug = false,\n            defaultUserGroupCount = 0,\n            panelUserCount = 0,\n            authUserGroup = {},\n            stateServerActive = false;\n\n        for(let instanceId in this.storage) {\n            if(this.storage.hasOwnProperty(instanceId)) {\n                const instance = this.storage[instanceId];\n\n                if(instance.serverStartedTimestamp < startedTime) {\n                    startedTime = instance.serverStartedTimestamp;\n                }\n                if(instance.cpu) {\n                    cpuFullUsage+=instance.cpu;\n                }\n                if(instance.memory) {\n                    totalMemory+=instance.memory['totalMemMb'];\n                    usedMemory+=instance.memory['usedMemMb'];\n                }\n                brokerCount+=instance.brokerCount;\n\n                if(instance.debug) {\n                    debug = true;\n                }\n\n                if(instance.master && instance.master['stateServerConnected']){\n                    stateServerActive = true;\n                }\n\n                for(let workerFullId in instance.workers) {\n                    if(instance.workers.hasOwnProperty(workerFullId))\n                    {\n                        const worker = instance.workers[workerFullId];\n                        clientCount+=worker.clientCount;\n                        httpRequests+=worker.httpRequests;\n                        wsRequests+=worker.wsRequests;\n                        defaultUserGroupCount+=worker.user['defaultUserGroupCount'];\n                        panelUserCount+=worker.user['panelUserCount'];\n                        this._processAuthUserGroup(authUserGroup,worker.user['authUserGroups']);\n                    }\n                }\n            }\n        }\n\n        this.clusterInfoStorage = {\n            cpu : (cpuFullUsage / this.instanceCount),\n            memory : {\n                totalMemMb : totalMemory,\n                usedMemMb : usedMemory\n            },\n            brokerCount : brokerCount,\n            serverStartedTimestamp : startedTime,\n            clientCount : clientCount,\n            httpRequests : httpRequests,\n            wsRequests : wsRequests,\n            debug : debug,\n            stateServerActive : stateServerActive,\n            user : {\n                panelUserCount : panelUserCount,\n                defaultUserGroupCount : defaultUserGroupCount,\n                authUserGroups : authUserGroup\n            }\n        };\n\n        this.emitter.emit('clusterUpdate');\n    }\n\n    // noinspection JSMethodCanBeStatic\n    _processAuthUserGroup(authUserMain,authUserGroup)\n    {\n        for(let group in authUserGroup) {\n            if(authUserGroup.hasOwnProperty(group)) {\n                if(!authUserMain.hasOwnProperty(group)){\n                    authUserMain[group] = authUserGroup[group];\n                }\n                else {\n                    authUserMain[group]+=authUserGroup[group];\n                }\n            }\n        }\n    }\n\n    static getEngine() {\n        if (!DataEngine.instance) {\n            DataEngine.instance = new DataEngine();\n        }\n        return DataEngine.instance;\n    }\n\n    static reset(){\n        DataEngine.instance = new DataEngine();\n    }\n\n    update(event,id,info)\n    {\n        const instanceId = id['instanceId'];\n        const workerFullId = id['workerFullId'];\n\n        if(this._checkWorkerExists(instanceId,workerFullId))\n        {\n            const idTarget = this._getIdTarget(instanceId,workerFullId);\n            if(event === 'up') {\n                this._updateSystemInfo(idTarget.instance,idTarget.worker,info['systemInfo']);\n                idTarget.worker.clientCount = info[\"clientCount\"];\n                idTarget.worker.user = info['user'];\n                idTarget.worker.httpRequests = info['httpRequests'];\n                idTarget.worker.wsRequests = info['wsRequests'];\n                this.emitter.emit('mainUpdate',instanceId,workerFullId,idTarget);\n            }\n            else if(event === 'up-l') {\n                idTarget.instance.brokers = info['brokers'];\n                idTarget.instance.master = info['master'];\n                this.clusterBrokerList = info['cBrokers'];\n                this.emitter.emit('nodeUpdate',instanceId,workerFullId,idTarget);\n            }\n            this.refreshWorkerPing(idTarget.worker);\n        }\n    }\n\n    _checkWorkerExists(instanceId,workerFullId) {\n        let res = false;\n        if(this.storage.hasOwnProperty(instanceId) &&\n            this.storage[instanceId].workers.hasOwnProperty(workerFullId)) {\n            res = true;\n        }\n        return res;\n    }\n\n    _getIdTarget(instanceId,workerFullId) {\n        return {\n            instance : this.storage[instanceId],\n            worker : this.storage[instanceId].workers[workerFullId]\n        }\n    }\n\n    _updatePanelAuthUserMap(map)\n    {\n        if(typeof map === 'object'){\n            for(let k in map) {\n                if(map.hasOwnProperty(k) && !this.panelAuthUserMap.hasOwnProperty(k)){\n                    this.panelAuthUserMap[k] = map[k];\n                }\n            }\n        }\n    }\n\n    _updatePanelDefaultName(name) {\n        if(!this.defaultUserName) {\n            this.defaultUserName = name;\n        }\n    }\n\n    firstPong(id,info) {\n        const instanceId = id['instanceId'];\n        if(!this.storage.hasOwnProperty(instanceId)) {\n            let instance = {};\n            instance.master        = {};\n            instance.brokerCount   = info['brokerCount'];\n            instance.hostname      = info['hostname'];\n            instance.port          = info['port'];\n            instance.path          = info['path'];\n            instance.secure        = info['secure'];\n            instance.appName       = info['appName'];\n            instance.debug         = info['debug'];\n            instance.wsEngine      = info['wsEngine'];\n            instance.nodeVersion   = info['nodeVersion'];\n            instance.license       = info['license'];\n            instance.serverStartedTimestamp = info['serverStartedTimestamp'];\n            instance.zationServerVersion    = info['zationServerVersion'];\n            instance.ip            = info['ip'];\n            this._updatePanelAuthUserMap(info['panelAuthUserMap']);\n            this._updatePanelDefaultName(info['defaultUserName']);\n            const generalSystemInfo = info['generalSystemInfo'];\n            instance.cpuModel = generalSystemInfo['cpuModel'];\n            instance.cpuCount = generalSystemInfo['cpuCount'];\n            instance.platform = generalSystemInfo['platform'];\n            instance.oos      = generalSystemInfo['oos'];\n            instance.workers = {};\n            this.storage[instanceId] = instance;\n            this.instanceCount++;\n            this.emitter.emit('newInstance',instanceId);\n            this._createWorker(instance,id,info);\n        }\n        else {\n            this._createWorker(this.storage[instanceId],id,info);\n        }\n\n        if(id['workerId'] === 0){\n            this.clusterBrokerList = info['cBrokers'];\n            this.storage[instanceId].brokers = info['brokers'];\n            this.storage[instanceId].master = info['master'];\n        }\n    }\n\n    // noinspection JSMethodCanBeStatic\n    _updateSystemInfo(instance,worker,info)\n    {\n        const instanceInfo = info['instance'];\n        instance.drive = instanceInfo['drive'];\n        instance.memory = instanceInfo['memory'];\n        instance.cpu = instanceInfo['cpu'];\n        const pidInfo = info['pid'];\n        worker.cpu = pidInfo['cpu'];\n        worker.memory = pidInfo['memory'];\n    }\n\n\n    // noinspection JSMethodCanBeStatic\n    refreshWorkerPing(worker) {\n        worker.timeout = Date.now();\n    }\n\n    setTaskProcessClusterInfo() {\n        setInterval(() => {\n            this.processClusterInfo();\n        },1000)\n    }\n\n    // noinspection JSMethodCanBeStatic\n    _createWorker(instance,id,info)\n    {\n        const workers = instance.workers;\n        if(!workers.hasOwnProperty(id['workerFullId'])) {\n            let worker = {};\n            worker.id = id['workerId'];\n            worker.workerStartedTimestamp = info['workerStartedTimestamp'];\n            worker.clientCount = info['clientCount'];\n            this._updateSystemInfo(instance,worker,info['systemInfo']);\n            worker.user = info['user'];\n            worker.httpRequests = info['httpRequests'];\n            worker.wsRequests = info['wsRequests'];\n            this.refreshWorkerPing(worker);\n            workers[id['workerFullId']] = worker;\n            this.workerCount++;\n            this.emitter.emit('newWorker',id['workerFullId']);\n        }\n    }\n\n    setWorkerTimeoutChecker()\n    {\n        setInterval(() => {\n            for (let instanceId in this.storage) {\n                if (this.storage.hasOwnProperty(instanceId)) {\n                    const workers = this.storage[instanceId].workers;\n                    let aWorkerIsDown = false;\n                    for (let workerId in workers) {\n                        if (workers.hasOwnProperty(workerId) && ((Date.now() - workers[workerId].timeout) > workerTimeout)) {\n                            delete workers[workerId];\n                            this.workerCount--;\n                            aWorkerIsDown = true;\n                            this.emitter.emit('workerLeft', workerId);\n                        }\n                    }\n                    if(aWorkerIsDown){\n                        this._checkInstanceIsDown(this.storage[instanceId],instanceId);\n                    }\n                }\n            }\n        },workerCheckTime);\n    }\n\n    _checkInstanceIsDown(instance,id)\n    {\n        const workers = instance.workers;\n        let count = 0;\n        for(let k in workers) {\n            if(workers.hasOwnProperty(k)){\n                count++;\n            }\n        }\n        if(count === 0) {\n            delete this.storage[id];\n            this.instanceCount--;\n            this.emitter.emit('instanceLeft',id);\n        }\n    }\n}\n\n","import React, {Component} from 'react';\nimport './infoCard.css'\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {FaPlay, FaPause, FaArrowsAltH} from 'react-icons/fa';\n\nconst pulse = (id) => {\n    const node = document.getElementById(id);\n    if(node){\n        node.classList.remove('pulse');\n        setTimeout(() => {\n            node.classList.add('pulse');\n        }, 10);\n    }\n};\n\nclass RTInfoCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.btnSwitchId = 'rt-switchControl-' + RTInfoCard.btnSwitchId;\n        this.btnTimeId = 'rt-timeControl-' + RTInfoCard.btnTimeId;\n        RTInfoCard.btnTimeId++;\n        RTInfoCard.btnSwitchId++;\n        this.defaultSwitch = this.props.switchDefault;\n\n        this.state = {\n            play: true,\n            switch: this.defaultSwitch\n        };\n    }\n\n    render() {\n        return (\n            <div style={this.props.height ? {height : this.props.height} : (this.props.minHeight ? {minHeight : this.props.minHeight} : {})}\n                 className={\"text-white bg-info card\" + (this.props.big ? ' big-card' : '') + (this.props.green ? ' cardGreen' : '')}>\n                <div className=\"pb-0 card-body\">\n                    <div id=\"carouselButtons\">\n                        <Tooltip title={this.state.play ? 'Pause' : 'Play'} aria-label={this.state.play ? 'Pause' : 'Play'}>\n                        <button id={this.btnTimeId} type=\"button\" className=\"btn btn-time-control animated\"\n                                onClick={this.changeTime.bind(this)}>\n                            {\n                                this.state.play ? <FaPause height={30} width={30} className=\"timeIcon\"/> :\n                                    <FaPlay height={20} width={20} className=\"timeIcon\"/>\n                            }\n                        </button>\n                        </Tooltip>\n                        {\n                            this.props.switch?\n                                <Tooltip title={this.props.switchTooltip} aria-label={this.props.switchTooltip}>\n                                <button id={this.btnSwitchId} type=\"button\" className=\"btn btn-switch-control animated\"\n                                onClick={this.btnSwitch.bind(this)}>\n                                    <FaArrowsAltH height={30} width={30} className=\"switchIcon\"/>\n                                </button>\n                                </Tooltip>: undefined\n                        }\n                    </div>\n                    <div className=\"text-value\">\n                        {this.props.value}\n                    </div>\n                    <div>\n                        {this.props.description}\n                    </div>\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n\n    changeTime() {\n        pulse(this.btnTimeId);\n        this.setState({\n            play: !this.state.play\n        },() => {\n            if (typeof this.props['onTimeChange'] === 'function') {\n                this.props['onTimeChange'](this.state.play);\n            }\n        });\n    }\n\n    btnSwitch() {\n        pulse(this.btnSwitchId);\n        this.setState({\n            switch: !this.state.switch\n        },() => {\n            if (typeof this.props['onSwitchChange'] === 'function') {\n                this.props['onSwitchChange'](this.state.switch);\n            }\n        });\n    }\n}\n\nRTInfoCard.btnSwitchId = 0;\nRTInfoCard.btnTimeId = 0;\n\nexport default RTInfoCard;\n","function CustomTooltips(tooltipModel) {\n    const _setCanvasId = () => {\n        const _idMaker = () => {\n            const _hex = 16;\n            const _multiplier = 0x10000;\n            return ((1 + Math.random()) * _multiplier | 0).toString(_hex)\n        };\n        const _canvasId = `_canvas-${_idMaker() + _idMaker()}`;\n        this._chart.canvas.id = _canvasId;\n        return _canvasId\n    };\n\n    const ClassName = {\n        ABOVE                   : 'above',\n        BELOW                   : 'below',\n        CHARTJS_TOOLTIP         : 'chartjs-tooltip',\n        NO_TRANSFORM            : 'no-transform',\n        TOOLTIP_BODY            : 'tooltip-body',\n        TOOLTIP_BODY_ITEM       : 'tooltip-body-item',\n        TOOLTIP_BODY_ITEM_COLOR : 'tooltip-body-item-color',\n        TOOLTIP_BODY_ITEM_LABEL : 'tooltip-body-item-label',\n        TOOLTIP_BODY_ITEM_VALUE : 'tooltip-body-item-value',\n        TOOLTIP_HEADER          : 'tooltip-header',\n        TOOLTIP_HEADER_ITEM     : 'tooltip-header-item'\n    };\n\n    const Selector = {\n        DIV     : 'div',\n        SPAN    : 'span',\n        TOOLTIP : `${this._chart.canvas.id || _setCanvasId()}-tooltip`\n    };\n\n    let tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n        tooltip = document.createElement('div');\n        tooltip.id = Selector.TOOLTIP;\n        tooltip.className = ClassName.CHARTJS_TOOLTIP;\n        this._chart.canvas.parentNode.appendChild(tooltip)\n    }\n\n    if (tooltipModel.opacity === 0) {\n        tooltip.style.opacity = 0;\n        return\n    }\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n    if (tooltipModel.yAlign) {\n        tooltip.classList.add(tooltipModel.yAlign)\n    } else {\n        tooltip.classList.add(ClassName.NO_TRANSFORM)\n    }\n\n    if (tooltipModel.body) {\n        const titleLines = tooltipModel.title || [];\n\n        const tooltipHeader = document.createElement(Selector.DIV);\n        tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n\n        titleLines.forEach((title) => {\n            const tooltipHeaderTitle = document.createElement(Selector.DIV);\n            tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n            tooltipHeaderTitle.innerHTML = title;\n            tooltipHeader.appendChild(tooltipHeaderTitle)\n        });\n\n        const tooltipBody = document.createElement(Selector.DIV);\n        tooltipBody.className = ClassName.TOOLTIP_BODY;\n\n        const tooltipBodyItems = tooltipModel.body.map((item) => item.lines);\n        tooltipBodyItems.forEach((item, i) => {\n            const tooltipBodyItem = document.createElement(Selector.DIV);\n            tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n\n            const colors = tooltipModel.labelColors[i];\n\n            const tooltipBodyItemColor = document.createElement(Selector.SPAN);\n            tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n            tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n\n            tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n            if (item[0].split(':').length > 1) {\n                const tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n                tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n                tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n\n                tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n\n                const tooltipBodyItemValue = document.createElement(Selector.SPAN);\n                tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n                tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n\n                tooltipBodyItem.appendChild(tooltipBodyItemValue)\n            } else {\n                const tooltipBodyItemValue = document.createElement(Selector.SPAN);\n                tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n                tooltipBodyItemValue.innerHTML = item[0];\n\n                tooltipBodyItem.appendChild(tooltipBodyItemValue)\n            }\n\n            tooltipBody.appendChild(tooltipBodyItem)\n        });\n\n        tooltip.innerHTML = '';\n\n        tooltip.appendChild(tooltipHeader);\n        tooltip.appendChild(tooltipBody)\n    }\n\n    const positionY = this._chart.canvas.offsetTop;\n    const positionX = this._chart.canvas.offsetLeft;\n    tooltip.style.opacity = 1;\n    tooltip.style.left = `${positionX + tooltipModel.caretX}px`;\n    tooltip.style.top = `${positionY + tooltipModel.caretY}px`;\n}\n\nexport default CustomTooltips","export const updateDataSet = (data,newData,maxLength) =>{\n    if(data.length >= maxLength) {\n        data.push(newData);\n        data.shift();\n        return data;\n    }\n    else {\n        data.push(newData);\n        return data;\n    }\n};","import React, {Component} from 'react';\nimport RTInfoCard from \"../../components/infoCard/RTInfoCard\";\nimport {Line} from \"react-chartjs-2\";\nimport CustomTooltips from \"../../components/chartTools/customTooltips\";\nimport {updateDataSet} from \"./RealTimeFunc\";\n\nclass RealTimeCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const firstData = this.props.getData();\n\n        this.chartOptions = {\n            animation: false,\n            spanGaps : true,\n            tooltips: {\n                enabled: false,\n                custom : CustomTooltips\n            },\n            maintainAspectRatio: false,\n            legend: {\n                display: false,\n            },\n            layout: {\n                padding: {\n                    top: 8,\n                    right : 8,\n                    left : 8\n                }\n            },\n            scales: {\n                xAxes: [\n                    {\n                        type: 'time',\n                        time: {\n                            unit: 'millisecond'\n                        },\n                        gridLines: {\n                            color: 'transparent',\n                            zeroLineColor: 'transparent',\n                        },\n                        ticks: {\n                            fontSize: 2,\n                            fontColor: 'transparent',\n                            beginAtZero:true\n                        },\n\n                    }],\n                yAxes: [\n                    {\n                        display: false,\n                        ticks: {\n                            display: false\n                        },\n                    }],\n            },\n            elements: {\n                line: {\n                    tension: 0.00001,\n                    borderWidth: 1,\n                },\n                point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                },\n            }\n        };\n\n\n        if(this.props.postFix){\n            this.chartOptions.tooltips.callbacks = {\n                label: (tooltipItems) => {\n                    return tooltipItems.yLabel + ' ' + this.props.postFix;\n                }\n            };\n        }\n\n        const d1 = new Date();\n        const d2 = new Date();\n        d2.setMilliseconds(d1.getMilliseconds()+((this.props.every / 2) || 1000));\n\n\n        const data = {\n            datasets: [\n                {\n                    label: this.props.getDataLabel ? this.props.getDataLabel(firstData) :\n                        (this.props.dataLabel ? this.props.dataLabel : ''),\n                    backgroundColor: 'rgba(255,255,255,.3)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [{\n                        x : d1,\n                        y : firstData\n                    },\n                        {\n                            x : d2,\n                            y : firstData\n                        }]\n                },\n            ],\n        };\n\n        this.state = {\n            currentData : firstData,\n            running : true,\n            chartData : data\n        }\n    }\n\n\n    render() {\n        return (\n            <RTInfoCard value={this.getValue.bind(this)()} showTimeControl={true}\n                        description={this.getDescription.bind(this)()} onTimeChange={this.timeChange.bind(this)}>\n                <div className=\"chart-wrapper mx-3\" style={{ height: '70px'}}>\n                    <Line options={this.chartOptions} data={this.state.chartData} height={70} />\n                </div>\n            </RTInfoCard>\n        )\n    }\n\n    getDescription()\n    {\n        if(this.props.description){\n            return this.props.description;\n        }\n        if(this.props.getDescription){\n            return this.props.getDescription(this.state.currentData);\n        }\n        else {\n            return '';\n        }\n    }\n\n    getValue() {\n        if(this.props.getValue){\n            return this.props.getValue(this.state.currentData);\n        }\n        else {\n            return this.props.postFix ? this.state.currentData + \" \" + this.props.postFix : this.state.currentData;\n        }\n    }\n\n    timeChange(state){\n        if(!state && this.state.running){\n            this.setState({running : false},\n                () => this.tmpNewData = false);\n        }\n\n        if(state && !this.state.running){\n            if(this.tmpNewData){\n                this.setState({\n                    currentData : this.tmpCurrentData,\n                    chartData : this.tmpChartData\n                })\n            }\n            else {\n                this.process.bind(this)();\n            }\n            this.setState({running : true});\n        }\n    }\n\n    componentDidMount() {\n\n        const interval = setInterval(() => {\n            this.process.bind(this)();\n\n        },this.props.every || 1000);\n\n        this.setState({interval : interval,running : true});\n    }\n\n    process()\n    {\n        const datasetsCopy = this.state.chartData.datasets.slice(0);\n        const dataCopy = datasetsCopy[0].data.slice(0);\n\n        const data = this.props.getData();\n\n        datasetsCopy[0].data = updateDataSet(dataCopy,{\n            x: new Date(),\n            y: data\n        },this.props.maxLength);\n\n        if(this.props.getDataLabel) {\n            datasetsCopy[0].label = this.props.getDataLabel(data);\n        }\n\n        const chartData = Object.assign({},{\n            datasets: datasetsCopy\n        });\n\n        if(this.state.running){\n            this.setState({\n                currentData : data,\n                chartData : chartData\n            });\n        }\n        else {\n            this.tmpCurrentData = data;\n            this.tmpChartData = chartData;\n            this.tmpNewData = true;\n        }\n    }\n\n    componentWillUnmount() {\n        if(this.state.interval){\n            clearInterval(this.state.interval);\n        }\n    }\n}\n\nexport default RealTimeCard;","import React, {Component} from 'react';\nimport RTInfoCard from \"../../components/infoCard/RTInfoCard\";\nimport {Line} from \"react-chartjs-2\";\nimport CustomTooltips from \"../../components/chartTools/customTooltips\";\nimport {updateDataSet} from \"./RealTimeFunc\";\n\nclass BigRealTimeCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.chartOptions = {\n            animation: false,\n            spanGaps : true,\n            tooltips: {\n                enabled: false,\n                custom : CustomTooltips\n            },\n            maintainAspectRatio: false,\n            legend: {\n                display: (this.props.legend !== undefined) ? this.props.legend : true,\n                labels : {\n                    fontColor : '#ffffff'\n                },\n                position : 'bottom'\n            },\n            layout: {\n                padding: {\n                    top: 8,\n                    right : 8,\n                    left : 8\n                }\n            },\n            scales: {\n                xAxes: [\n                    {\n                        type: 'time',\n                        time: {\n                            unit: 'millisecond'\n                        },\n                        gridLines: {\n                            color: 'transparent',\n                            zeroLineColor: 'transparent',\n                        },\n                        ticks: {\n                            fontSize: 2,\n                            fontColor: 'transparent',\n                            beginAtZero:true\n                        },\n\n                    }],\n                yAxes: [\n                    {\n                        display: false,\n                        ticks: {\n                            display: false\n                        },\n                    }],\n            },\n            elements: {\n                line: {\n                    borderWidth: 1,\n                },\n                point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                },\n            }\n        };\n\n\n        if(this.props.postFix){\n            this.chartOptions.tooltips.callbacks = {\n                label: (tooltipItems) => {\n                    return tooltipItems.yLabel + ' ' + this.props.postFix;\n                }\n            };\n        }\n\n        const firstData = this.props.getData();\n\n\n        const data = {\n            datasets: [\n            ],\n        };\n\n        this.state = {\n            currentData : firstData,\n            running : true,\n            chartData : data\n        };\n\n        this.fillDataSet.bind(this)();\n\n    }\n\n    fillDataSet()\n    {\n        const d1 = new Date();\n        const d2 = new Date();\n        d2.setMilliseconds(d1.getMilliseconds()+((this.props.every /2) || 1000));\n\n        this.state.currentData.forEach((value,i) => {\n            this.state.chartData.datasets.push(\n                {\n                    label: this.props.label ? this.props.label[i] : this.props.getDataLabel(value),\n                    backgroundColor: i===0 ? 'rgba(48, 153, 187,.3)' : 'rgba(43, 225, 98,.3)',\n                    borderColor: i===0 ? 'rgba(48, 153, 187,.55)' : 'rgba(43, 225, 98,.55)',\n                    data: [{\n                        x : d1,\n                        y : value\n                    },\n                        {\n                            x : d2,\n                            y : value\n                        }]\n                }\n            );\n        });\n\n    }\n\n\n    render() {\n        return (\n            <RTInfoCard value={this.getValue.bind(this)()} big={true}\n                        description={this.getDescription.bind(this)()} onTimeChange={this.timeChange.bind(this)}>\n                <div className=\"chart-wrapper mx-3\" style={{ height: '300px'}}>\n                    <Line options={this.chartOptions} data={this.state.chartData} height={70}/>\n                </div>\n            </RTInfoCard>\n        )\n    }\n\n    getDescription()\n    {\n        if(this.props.description){\n            return this.props.description;\n        }\n        if(this.props.getDescription){\n            return this.props.getDescription(this.state.currentData);\n        }\n        else {\n            return '';\n        }\n    }\n\n    getValue() {\n        if(this.props.getValue){\n            return this.props.getValue(this.state.currentData);\n        }\n        else {\n            return this.props.postFix ? this.state.currentData + \" \" + this.props.postFix : this.state.currentData;\n        }\n    }\n\n    timeChange(state){\n        if(!state && this.state.running){\n            this.setState({running : false},\n                () => this.tmpNewData = false);\n        }\n\n        if(state && !this.state.running){\n            if(this.tmpNewData){\n                this.setState({\n                    currentData : this.tmpCurrentData,\n                    chartData : this.tmpChartData\n                })\n            }\n            else {\n                this.process.bind(this)();\n            }\n            this.setState({running : true});\n        }\n    }\n\n    componentDidMount() {\n\n        const interval = setInterval(() => {\n            this.process.bind(this)();\n\n        },this.props.every || 1000);\n\n        this.setState({interval : interval,running : true})\n    }\n\n    process()\n    {\n        const datasetsCopy = this.state.chartData.datasets.slice(0);\n\n        const data = this.props.getData();\n\n        data.forEach((d,i) => {\n            const dataCopy = datasetsCopy[i].data.slice(0);\n            datasetsCopy[i].data = updateDataSet(dataCopy,{\n                x: new Date(),\n                y: d\n            },this.props.maxLength);\n\n            if(this.props.getDataLabel) {\n                datasetsCopy[i].label = this.props.getDataLabel(d);\n            }\n        });\n\n        const chartData = Object.assign({},{\n            datasets: datasetsCopy\n        });\n\n        if(this.state.running){\n            this.setState({\n                currentData : data,\n                chartData : chartData\n            });\n        }\n        else {\n            this.tmpCurrentData = data;\n            this.tmpChartData = chartData;\n            this.tmpNewData = true;\n        }\n    }\n\n    componentWillUnmount() {\n        if(this.state.interval){\n            clearInterval(this.state.interval);\n        }\n    }\n}\n\nexport default BigRealTimeCard;","import React, {Component} from 'react';\nimport RTInfoCard from \"../../components/infoCard/RTInfoCard\";\nimport './realTimePercentCard.css';\n\nclass RealTimePercentCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value : this.props.getPercent(),\n            isRunning : true,\n        }\n    }\n\n\n    render() {\n        return (\n            <RTInfoCard value={this.state.value + ' %'} showTimeControl={true}\n                        description={this.props.description} onTimeChange={this.timeChange.bind(this)}>\n                <div className=\"chart-wrapper mx-3\" style={{ height: '70px'}}>\n                   <div className={\"progress mb-3\"}>\n                       <div className={\"progress-bar\"} style={{width : (this.state.value + '%')}} aria-valuemin=\"0\" aria-valuemax=\"100\">\n                       </div>\n                   </div>\n                </div>\n            </RTInfoCard>\n        )\n    }\n\n    timeChange(state){\n        if(!state && this.state.isRunning){\n            clearInterval(this.state.interval);\n            this.setState({isRunning : false});\n        }\n\n        if(state && !this.state.isRunning){\n            this.process.bind(this)();\n            this.componentDidMount.bind(this)();\n        }\n    }\n\n    componentDidMount() {\n\n        const interval = setInterval(() => {\n            this.process.bind(this)();\n\n        },this.props.every || 1000);\n\n        this.setState({interval : interval,isRunning : true})\n    }\n\n    process()\n    {\n        this.setState({\n            value : this.props.getPercent()\n        });\n    }\n\n    componentWillUnmount() {\n        if(this.state.interval){\n            clearInterval(this.state.interval);\n        }\n    }\n}\n\nexport default RealTimePercentCard;","import React, {Component} from 'react';\nimport RTInfoCard from \"../../components/infoCard/RTInfoCard\";\nimport DataEngine from \"../../core/DataEngine\";\nimport './realTimeNetworkCard.css';\n\nimport cytoscape from'cytoscape';\nimport euler from 'cytoscape-euler';\nimport nodeHtmlLabel from 'cytoscape-node-html-label';\nnodeHtmlLabel(cytoscape);\ncytoscape.use(euler);\n\nconst layoutOptions = {\n    name: 'euler',\n    animate: 'end',\n    randomize : true,\n    pull: 0.000001,\n    theta: 0.5\n};\n\nclass RealTimeNetworkCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.id = RealTimeNetworkCard.id;\n        RealTimeNetworkCard.id++;\n\n        this.currentData = this._processData();\n\n        this.state = {\n            isRunning: true,\n        };\n\n    }\n\n    process() {\n        const ids = this._datasetIds(this.currentData);\n        this.currentData = this._processData();\n        this._runBuildCommands(this._buildCommands(ids,this.currentData));\n    }\n\n    _buildCommands(ids,newData){\n        const elements = newData.edges.concat(newData.nodes);\n        const addNodes = [];\n        const addEdges = [];\n\n        elements.forEach((e) => {\n            const id = e.data.id;\n            if(ids.indexOf(id) !== -1) {\n                const index = ids.indexOf(id);\n                ids.splice(index, 1);\n            }\n            else{\n                if(e.group === \"nodes\"){\n                    addNodes.push(e);\n                }\n                else{\n                    addEdges.push(e);\n                }\n            }\n        });\n        return {removeIds : ids,addNodes : addNodes, addEdges : addEdges};\n    }\n\n    _runBuildCommands(commands)\n    {\n        this.cy.startBatch();\n\n        let changes = false;\n\n        commands.removeIds.forEach((id) => {\n            this.cy.remove(this.cy.getElementById(id));\n            changes = true;\n        });\n\n        commands.addNodes.forEach((e) => {\n            this.cy.add(e);\n            changes = true;\n        });\n\n        commands.addEdges.forEach((e) => {\n            this.cy.add(e);\n            changes = true;\n        });\n\n        if(changes){\n            this.cy.layout(layoutOptions).run();\n        }\n\n        this.cy.endBatch();\n    }\n\n    _datasetIds(data){\n        const ids = [];\n        const elements = data.edges.concat(data.nodes);\n        elements.forEach((e) => {\n            ids.push(e.data.id);\n        });\n        return ids;\n    }\n\n    _processData() {\n        const instances = DataEngine.getEngine().storage;\n\n        const edges = [];\n        const nodes = [];\n\n        let masterId = 1;\n\n        const clusterBrokersList = DataEngine.getEngine().clusterBrokerList;\n        let showClusterBrokers = false;\n        let showClusterState = false;\n        const clusterBrokers = [];\n\n        if (Array.isArray(clusterBrokersList)) {\n            showClusterBrokers = true;\n            clusterBrokersList.forEach((v, id) => {\n                const nodeId = 'cBroker'+v+id;\n                nodes.push({\n                    data : {\n                        id: nodeId,\n                        label: 'Cluster-Broker ' + id,\n                    },\n                    group: \"nodes\",\n                    classes: '11'\n                });\n                clusterBrokers.push(nodeId);\n            });\n        }\n\n        if(DataEngine.getEngine().clusterInfoStorage.stateServerActive) {\n            showClusterState = true;\n            nodes.push({\n                data : {\n                    id: 'cState',\n                    label: 'Cluster-State',\n                },\n                group: \"nodes\",\n                classes: '11 state'\n            });\n        }\n\n        for (let instanceId in instances) {\n            if (instances.hasOwnProperty(instanceId)) {\n\n                const instance = instances[instanceId];\n                const workers = instance.workers;\n                const nodeMasterId = instanceId+'-master';\n\n                const masterClass = instance.master['isLeader'] ? 'masterLeader' : 'master';\n\n                nodes.push({\n                    data : {\n                        id: nodeMasterId,\n                        label: 'Master ' + masterId,\n                    },\n                    group: \"nodes\",\n                    classes: '11 '+masterClass\n                });\n\n                if(showClusterState && instance.master['stateServerConnected']) {\n                    edges.push({\n                        data : {\n                            id : nodeMasterId+'cluster-state',\n                            source: nodeMasterId,\n                            target: 'cState',\n                        },\n                        group: \"edges\",\n                        classes: 'lightEdge'\n                    });\n                }\n\n                for (let workerFullId in workers) {\n                    if (workers.hasOwnProperty(workerFullId)) {\n                        const workerNodeId = instanceId+'-worker-'+workerFullId;\n                        nodes.push({\n                            data : {\n                                id: workerNodeId,\n                                label: 'Worker ' + workers[workerFullId].id,\n                            },\n                            group: \"nodes\",\n                            classes: '11'\n                        },);\n                        edges.push({\n                            data : {\n                                id : nodeMasterId+workerNodeId,\n                                source: nodeMasterId,\n                                target: workerNodeId,\n                            },\n                            group: \"edges\"\n                        });\n                    }\n                }\n\n                let brokers;\n                if (instance.brokers) {\n                    brokers = instance.brokers;\n                } else {\n                    brokers = {};\n                    for (let i = 0; i <= instance.brokerCount; i++) {\n                        brokers[i] = null;\n                    }\n                }\n\n                for (let brokerId in brokers) {\n                    if (brokers.hasOwnProperty(brokerId)) {\n                        const brokerNodeId = instanceId+'-broker-'+brokerId;\n                        nodes.push({\n                            data : {\n                                id: brokerNodeId,\n                                label: 'Broker ' + brokerId,\n                            },\n                            group: \"nodes\",\n                            classes: '11'\n                        });\n                        edges.push({\n                            data : {\n                                id : nodeMasterId+brokerNodeId,\n                                source: nodeMasterId,\n                                target: brokerNodeId,\n                            },\n                            group: \"edges\"\n                        });\n\n                        if (showClusterBrokers) {\n                            for(let i = 0; i < clusterBrokers.length; i++) {\n                                edges.push({\n                                    data : {\n                                        id : brokerNodeId+clusterBrokers[i],\n                                        source: brokerNodeId,\n                                        target: clusterBrokers[i]\n                                    },\n                                    group: \"edges\"\n                                });\n                            }\n                        }\n                    }\n                }\n                masterId++;\n            }\n        }\n        return {\n            nodes: nodes,\n            edges: edges\n        }\n    }\n\n    render() {\n        return (\n            <RTInfoCard value={'Network'} showTimeControl={true} onTimeChange={this.timeChange.bind(this)} big={true} height={'35rem'}>\n                <div className=\"chart-wrapper mx-3\" style={{height: '15rem'}}>\n                    <div id={\"cy-\"+this.id} style={{height : '30.5rem', top : '-14.5rem',position : 'relative'}}/>\n                </div>\n            </RTInfoCard>\n        )\n    }\n\n    timeChange(state){\n        if(!state && this.state.isRunning){\n            clearInterval(this.state.interval);\n            this.setState({isRunning : false});\n        }\n\n        if(state && !this.state.isRunning){\n            this.process.bind(this)();\n            this.setInterval.bind(this)();\n        }\n    }\n\n    componentDidMount() {\n        this.cy = cytoscape({\n            container: document.getElementById('cy-'+this.id),\n            layout : layoutOptions,\n            style: [\n                {\n                    selector: 'node',\n                    style: {\n                        'background-color': '#3099bb',\n                    }\n                },\n                {\n                    selector: '.master',\n                    style: {\n                        'background-color': '#2be162',\n                    }\n                },\n                {\n                    selector: '.state',\n                    style: {\n                        'background-color': '#3c5cda',\n                    }\n                },\n                {\n                    selector: '.masterLeader',\n                    style: {\n                        'background-color': '#edfd2d',\n                    }\n                },\n                {\n                    selector: 'edge',\n                    style: {\n                        'line-color': '#26292d',\n                        'opacity': 1\n                    }\n                },\n                {\n                    selector: '.lightEdge',\n                    style: {\n                        'line-color': '#26292d',\n                        'opacity': 0.5\n                    }\n                }\n            ],\n            elements : this.currentData\n        });\n\n        // noinspection JSUnresolvedFunction\n        this.cy.nodeHtmlLabel([{\n            query: '.11',\n            valign: \"top\",\n            halign: \"center\",\n            valignBox: \"top\",\n            halignBox: \"center\",\n            tpl: function(data) {\n                // noinspection CheckTagEmptyBody\n                return '<p class=\"cy-title__p1\">' + data.label + '</p>';\n            }\n        }]);\n        this.setInterval();\n    }\n\n    setInterval(){\n        const interval = setInterval(() => {\n            this.process.bind(this)();\n\n        }, this.props.every || 5000);\n\n        this.setState({interval: interval, isRunning: true});\n    }\n\n    componentWillUnmount() {\n        if (this.state.interval) {\n            clearInterval(this.state.interval);\n        }\n    }\n}\n\nRealTimeNetworkCard.id = 0;\n\nexport default RealTimeNetworkCard;","import React, {Component} from 'react';\nimport './dashboard.css';\nimport DataEngine from \"../../../core/DataEngine\";\nimport RealTimeCard from \"../../../components/realTimeCardCharts/RealTimeCard\";\nimport BigRealTimeCard from \"../../../components/realTimeCardCharts/BigRealTimeCard\";\nimport RealTimePercentCard from \"../../../components/realTimeCardCharts/RealTimePercentCard\";\nimport RealTimeNetworkCard from \"../../../components/realTimeCardCharts/RealTimeNetworkCard\";\n\nclass Dashboard extends Component {\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"animated fadeIn\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimeCard getDataLabel={Dashboard.getClientsConnectedDesc} getDescription={Dashboard.getClientsConnectedDesc} maxLength={10} getData={Dashboard.getClientsConnected} every={1000}/>\n                        </div>\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimeCard dataLabel={\"Worker\"} getDescription={Dashboard.getWorkerDesc} getData={Dashboard.getWorkerOnline} maxLength={10} every={4000} />\n                        </div>\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimePercentCard description=\"Cpu usage\" getPercent={Dashboard.getCpuUsage} every={1000}/>\n                        </div>\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimeCard dataLabel={\"Memory usage\"} description=\"Memory usage\" getData={Dashboard.getMemoryUsage} every={2000}  maxLength={10} postFix={\"mb\"} getValue={Dashboard.getMemoryUsagePercent}/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-lg-12\">\n                            <BigRealTimeCard description=\"Requests in total\" label={['WebSocket Requests','HTTP Requests']}\n                                             getValue={(v) => {return v.reduce((a, b) => a + b, 0);}} getData={Dashboard.getRequestData} maxLength={40} every={1000}/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-lg-12\">\n                            <RealTimeNetworkCard every={5000}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    static getRequestData() {\n        return [DataEngine.getEngine().clusterInfoStorage.wsRequests,\n            DataEngine.getEngine().clusterInfoStorage.httpRequests];\n    }\n\n    static getWorkerDesc(v) {\n        return `Worker${(v > 1 || v === 0) ? 's' : ''} online (` + DataEngine.getEngine().instanceCount + \" Server)\"\n    }\n\n    static getClientsConnectedDesc(v) {\n        return (v > 1 || v === 0) ? \"Clients connected\" : \"Client connected\";\n    }\n\n    static getClientsConnected() {\n        return DataEngine.getEngine().clusterInfoStorage.clientCount;\n    }\n\n    static getCpuUsage() {\n        return Number(DataEngine.getEngine().clusterInfoStorage.cpu).toFixed(1);\n    }\n\n    static getMemoryUsage() {\n        return Number(DataEngine.getEngine().clusterInfoStorage.memory.usedMemMb).toFixed(0);\n    }\n\n    static getMemoryUsagePercent(current)\n    {\n        return Number((current / DataEngine.getEngine().clusterInfoStorage.memory.totalMemMb) * 100).toFixed(1) + ' %';\n    }\n\n    static getWorkerOnline() {\n        return DataEngine.getEngine().workerCount;\n    }\n}\n\nexport default Dashboard;\n","import React, {Component} from 'react';\nimport MaterialTable from 'material-table'\nimport RTInfoCard from \"../infoCard/RTInfoCard\";\nimport \"./rtTableCard.css\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    overrides: {\n        MuiPaper: {\n            root: {\n                top: '-1rem !important',\n                boxShadow: 'none !important',\n                backgroundColor: 'transparent !important'\n            }\n        },\n        MuiTableCell : {\n            root : {\n                color: 'white !important',\n                fontFamily: \"NexaBold\",\n                padding: '4px 16px 4px 24px'\n            }\n        },\n        MuiTableSortLabel : {\n            root : {\n                '&:hover' : {\n                    color: 'rgba(43, 225, 98,1.0) !important'\n                },\n                '&:focus' : {\n                    color: 'rgba(43, 225, 98,1.0) !important'\n                }\n            },\n            active : {\n                color: 'rgba(43, 225, 98,1.0) !important'\n            }\n        },\n        MuiIconButton : {\n            label : {\n                '&:focus' : {\n                    outline : 'none'\n                }\n            }\n        }\n    }\n});\n\nclass RTTableCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRunning : true,\n            data : this.props.getData()\n        };\n    }\n\n    render() {\n        return (\n            <div className={\"tableCard\"}>\n            <RTInfoCard value={this.props.value} big={true} minHeight={'29rem'} green={true} onTimeChange={this.timeChange.bind(this)}>\n                <div className=\"chart-wrapper mx-3 table-con\">\n                    <MuiThemeProvider theme={theme}>\n                    <MaterialTable actions={this.props.actions} columns={this.props.columns} data={this.state.data} title={\"\"}\n                        options={{\n                            paging: false,\n                            toolbar: false\n                        }} headerStyle={{backgroundColor : 'black'}}\n                    />\n                    </MuiThemeProvider>\n                </div>\n            </RTInfoCard>\n            </div>\n        )\n    }\n\n    timeChange(state){\n        if(!state && this.state.isRunning){\n            clearInterval(this.state.interval);\n            this.setState({isRunning : false});\n        }\n\n        if(state && !this.state.isRunning){\n            this.process.bind(this)();\n            this.componentDidMount.bind(this)();\n        }\n    }\n\n    componentDidMount() {\n\n        const interval = setInterval(() => {\n            this.process.bind(this)();\n\n        },this.props.every || 1000);\n\n        this.setState({interval : interval,isRunning : true})\n    }\n\n    process()\n    {\n        this.setState({\n           data : this.props.getData()\n        });\n    }\n\n    componentWillUnmount() {\n        if(this.state.interval){\n            clearInterval(this.state.interval);\n        }\n    }\n}\n\nexport default RTTableCard;","/*\nAuthor: Luca Scaringella\nGitHub: LucaCode\n©Copyright by Luca Scaringella\n */\n\nexport default class Time {\n\n    static processDate(timestamp){\n        return (new Date(timestamp)).toLocaleString('en-GB',{dateStyle : 'full',timeStyle : 'long'});\n    }\n\n    static processTimeSpan(timestamp) {\n        return Date.now() - timestamp;\n    }\n\n    static processAge(timespan) {\n        if(timespan < 1000) {\n           return '1 sec';\n       }\n       else if(timespan < 60000) {\n           // under 1 min\n           return parseInt(timespan / 1000) + ' sec';\n       }\n       else if(timespan < 3.6e+6) {\n           // under 1 hour\n           return parseInt(timespan / 60000) + ' min';\n       }\n       else if(timespan < 8.64e+7) {\n           // under day\n           const res = parseInt(timespan / 3.6e+6);\n           return res + (res === 1 ? ' hour' : ' hours');\n       }\n       else if(timespan < 6.048e+8) {\n           // under week\n           const res = parseInt(timespan / 8.64e+7);\n           return res + (res === 1 ? ' day' : ' days');\n       }\n       else if(timespan < 2.628e+9) {\n           // under month\n           const res = parseInt(timespan / 6.048e+8);\n           return res + (res === 1 ? ' week' : ' weeks');\n       }\n       else if(timespan < 3.154e+10) {\n           // under year\n           const res = parseInt(timespan / 2.628e+9);\n           return res + (res === 1 ? ' month' : ' months');\n       }\n       else {\n           const res = parseInt(timespan / 3.154e+10);\n           return res + (res === 1 ? ' year' : ' years');\n       }\n    }\n}\n","import React, {Component} from 'react';\nimport \"./tableProgressRow.css\";\n\nclass TableProgressRow extends Component {\n\n    render() {\n        const progress = parseInt(this.props.progress) <= 100 ? this.props.progress : 100;\n        return (\n            <div className={\"progressCardTooltip\"} style={{maxWidth: '100px',width: '8rem', backgroundColor: '#999999', height: 20}}>\n                <div style={{textAlign: 'left', padding: 1, color: 'white', width: progress, backgroundColor: 'rgba(43, 225, 98,1.0)', height: 20}}/>\n                <span className=\"tooltipText\">{progress}</span>\n            </div>\n        )\n    }\n\n}\n\nexport default TableProgressRow;","import React, {Component} from 'react';\nimport \"./tableAgeRow.css\";\nimport Time from \"../../core/Time\";\n\nclass TableAgeRow extends Component {\n\n    render() {\n        return (\n            <div className={\"ageCardTooltip\"}>\n                <span>{Time.processAge(this.props.rowData.age)}</span>\n                <span className=\"tooltipText\">{Time.processDate(this.props.rowData.started)}</span>\n            </div>\n        )\n    }\n\n}\n\nexport default TableAgeRow;","import React, {Component} from 'react';\nimport BigRealTimeCard from \"../../../components/realTimeCardCharts/BigRealTimeCard\";\nimport DataEngine from \"../../../core/DataEngine\";\nimport RTTableCard from \"../../../components/realTimeCardCharts/RTTableCard\";\nimport Time from \"../../../core/Time\";\nimport {FaCheck, FaInfoCircle, FaTimes} from 'react-icons/fa';\nimport TableProgressRow from \"../../../components/chartTools/TableProgressRow\";\nimport TableAgeRow from \"../../../components/chartTools/TableAgeRow\";\n\nconst serverTableColumns = [\n    {title: 'Leader', field: 'leader', filtering: false, render: rowData => {\n            if(rowData.leader) {\n                return <FaCheck height={20}/>\n            }\n            else{\n                return <FaTimes height={20}/>\n            }\n        }},\n    {title: 'Id', field: 'id'},\n    {title: 'Age', field: 'age', filtering: false, render: rowData => {\n        return <TableAgeRow rowData={rowData}/>\n        }},\n    {title: 'Client/s', field: 'clientCount'},\n    {title: 'Cpu Usage', field: 'cpu', render: rowData => {\n            return (\n               <TableProgressRow progress={rowData.cpu + '%'}/>\n            );\n        }},\n    {title: 'Memory Usage', field: 'memory', render: rowData => {\n            return (\n                <TableProgressRow progress={rowData.memory + '%'}/>\n            );\n        }},\n    {title: 'Worker', field: 'workerCount', type: 'numeric'},\n    {title: 'Broker', field: 'brokerCount', type: 'numeric'},\n    {title: 'Request/s', field: 'requestCount', type: 'numeric'},\n];\n\nclass Server extends Component {\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"animated fadeIn\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-6 col-lg-6\">\n                            <BigRealTimeCard legend={false} description=\"Cpu usage\" getData={Server.getCpuUsage} maxLength={20}\n                                             every={1000} postFix={\"%\"} label={[\"Cpu usage\"]}/>\n                        </div>\n                        <div className=\"col-sm-6 col-lg-6\">\n                            <BigRealTimeCard legend={false} label={\"Memory usage\"} description=\"Memory usage\" getData={Server.getMemoryUsage}\n                                             every={2000}  maxLength={10} postFix={\"mb\"} getValue={Server.getMemoryUsagePercent}/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-lg-12\">\n                            <RTTableCard actions={[{\n                                    icon: FaInfoCircle,\n                                    tooltip: 'Show more information',\n                                    onClick: (event, rowData) => {this.props.history.push('server/'+rowData.id);},\n                                    iconProps: {\n                                        style:{\n                                            fontSize: 30\n                                        }\n                                    }\n                                }\n                            ]} columns={serverTableColumns} getData={Server.getServerTableData} value={\"Server\"}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    static getServerTableData()\n    {\n        const dataset = [];\n        const instances = DataEngine.getEngine().storage;\n        for(let instanceId in instances){\n            if(instances.hasOwnProperty(instanceId)){\n                const instance = instances[instanceId];\n                const workers = instance.workers;\n                let workerCount = 0,clientCount = 0,reqCount = 0;\n                for(let workerId in workers){\n                    if(workers.hasOwnProperty(workerId)){\n                        workerCount++;\n                        const worker = workers[workerId];\n                        clientCount+=worker.clientCount;\n                        reqCount+=worker.httpRequests;\n                        reqCount+=worker.wsRequests;\n                    }\n                }\n\n                let data = {\n                    id : instanceId,\n                    leader: instance.master.isLeader,\n                    age : Time.processTimeSpan(instance.serverStartedTimestamp),\n                    started : instance.serverStartedTimestamp,\n                    workerCount : workerCount,\n                    brokerCount : instance.brokerCount,\n                    requestCount : reqCount,\n                    cpu : Number(instance.cpu).toFixed(1),\n                    clientCount : clientCount,\n                    memory : '?'\n                };\n\n                if(instance.memory){\n                    data.memory = Number((instance.memory.usedMemMb * 100) / instance.memory.totalMemMb).toFixed(1);\n                }\n\n                dataset.push(data);\n            }\n        }\n        return dataset;\n    }\n\n    static getCpuUsage() {\n        return [Number(DataEngine.getEngine().clusterInfoStorage.cpu).toFixed(1)];\n    }\n\n    static getMemoryUsage() {\n        return [Number(DataEngine.getEngine().clusterInfoStorage.memory.usedMemMb).toFixed(0)];\n    }\n\n    static getMemoryUsagePercent(current)\n    {\n        return Number((current / DataEngine.getEngine().clusterInfoStorage.memory.totalMemMb) * 100).toFixed(1) + ' %';\n    }\n\n}\n\nexport default Server;\n","import React, {Component} from 'react';\nimport './infoCard.css'\n\nclass InfoCard extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          play : true\n        };\n    }\n\n    render() {\n        return (\n            <div className={\"text-white bg-info card\" + (this.props.big ? ' big-card' : '') + (this.props.extraBig ? ' extra-big-card' : '')}>\n                <div className=\"pb-0 card-body\">\n                    <div className=\"text-value\">\n                        {this.props.value}\n                    </div>\n                    <div>\n                        {this.props.description}\n                    </div>\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n\n}\n\nexport default InfoCard;\n","\nexport const zeroCompensation = {\n    renderZeroCompensation: function (chartInstance, d) {\n\n        const view = d._view;\n        const context = chartInstance.chart.ctx;\n        const startX = view.x - view.width / 2;\n        context.beginPath();\n        context.strokeStyle = '#aaaaaa';\n        context.moveTo(startX, view.y);\n        context.lineTo(startX + view.width, view.y);\n        context.stroke();\n    },\n\n    afterDatasetsDraw: function (chart, easing) {\n        const meta = chart.getDatasetMeta(0);\n        const dataSet = chart.config.data.datasets[0].data;\n        meta.data.forEach((d, index) => {\n            if(dataSet[index] === 0) {\n                this.renderZeroCompensation(chart, d)\n            }\n        })\n    }\n};","import React, {Component} from 'react';\nimport InfoCard from \"../../components/infoCard/InfoCard\";\nimport {Bar} from \"react-chartjs-2\";\nimport CustomTooltips from \"../../components/chartTools/customTooltips\";\nimport {zeroCompensation} from \"../chartTools/barZeroCompensation\";\n\nclass BigBarCardInfo extends Component {\n\n    constructor(props) {\n        super(props);\n\n\n        this.chartOptions = {\n            scaleBeginAtZero:true,\n            barBeginAtOrigin:true,\n            tooltips: {\n                enabled: false,\n                custom: CustomTooltips\n            },\n            maintainAspectRatio: false,\n            legend: {\n                display: false,\n            },\n\n            scales: {\n                xAxes: [\n                    {\n                        display: false,\n                        barPercentage: 0.8,\n                    }],\n                yAxes: [\n                    {\n                        ticks : {\n                            beginAtZero:true,\n                            suggestedMin: 0,\n                            min: 0\n                        },\n                        display: true,\n                    }],\n            },\n        };\n\n        if(this.props.postFix){\n            this.chartOptions.tooltips.callbacks = {\n                label: (tooltipItems) => {\n                    return tooltipItems.yLabel + ' ' + this.props.postFix;\n                }\n            };\n        }\n\n    }\n\n    buildDataSet()\n    {\n        return {\n            labels: this.props.label,\n            datasets: [\n                {\n                    backgroundColor: 'rgba(48, 153, 187,1)',\n                    borderColor: 'rgba(48, 153, 187,1)',\n                    data: this.props.data\n                }\n            ],\n        };\n\n    }\n\n    render() {\n        return (\n            <InfoCard value={this.props.value} extraBig={true} big={true}\n                      description={this.props.description}>\n                <div className=\"chart-wrapper mx-3\" style={{ height: '300px'}}>\n                    <Bar options={this.chartOptions} data={this.buildDataSet.bind(this)()} height={800} plugins={[zeroCompensation]}\n                         redraw={this.props.redraw}\n                     />\n                </div>\n            </InfoCard>\n        )\n    }\n\n}\n\nexport default BigBarCardInfo;\n","import React, {Component} from 'react';\nimport RCenter from \"react-center\";\nimport {ClipLoader, ScaleLoader} from \"react-spinners\";\nimport BigBarCardInfo from \"../../../components/infoCard/BigBarCardInfo\";\nimport {client} from 'zation-client';\nimport Fab from \"@material-ui/core/es/Fab/Fab\";\nimport {withStyles} from \"@material-ui/core\";\nimport './ping.css';\n\nconst styles = theme => ({\n    fab: {\n        margin: theme.spacing.unit\n    },\n    extendedIcon: {\n        marginRight: theme.spacing.unit,\n    },\n});\n\nclass Ping extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            mode : 'load',\n            btnLoad : false\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const {mode} = this.state;\n        if(mode === 'load') {\n            return (\n                <div className=\"container-fluid\">\n                    <div className=\"animated fadeIn\">\n                        <RCenter className={\"fullHeight loaderDown\"}>\n                            <ScaleLoader\n                                heightUnit={\"em\"}\n                                widthUnit={\"em\"}\n                                height={7}\n                                width={0.6}\n                                color={'#3099bb'}\n                            />\n                        </RCenter>\n                    </div>\n                </div>\n            )\n        }\n        else if(mode === 'result')\n        {\n            return (\n                <div className=\"container-fluid\">\n                    <div className=\"animated fadeIn\">\n                        <BigBarCardInfo postFix={\"ms\"} label={this.state.label}\n                                        description=\"Average ping time\"\n                                        data={this.state.data} value={this.state.avg + \" ms\"}\n                                        redraw={true}\n                        />\n                    </div>\n                    <div className={'btnContainer pingBtn-co'}>\n                        <Fab variant=\"extended\" aria-label=\"Delete\" onClick={this.refresh.bind(this)} className={'btn loginBtn '+classes.fab}>\n                            {!this.state.btnLoad ? \"Refresh\" : <ClipLoader color={'white'}/>}\n                        </Fab>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    refresh() {\n        this.setState({btnLoad : true});\n        this.process.bind(this)();\n    }\n\n    componentDidMount() {\n        this._isMount = true;\n        if(this.state.mode === 'load') {\n           this.process.bind(this)();\n        }\n    }\n\n    process(){\n        (async () => {\n            const label = [];\n            const rawData = [];\n\n            for(let i = 1; i < 21; i++) {\n                label.push(\"Ping \" + i);\n                rawData.push(await client.ping());\n            }\n\n            const sum = rawData.reduce(function(a, b) { return a + b; });\n\n            this.setState({\n                label : label,\n                avg : Number(sum / rawData.length).toFixed(2),\n                mode : 'result',\n                data : rawData.map((time) => time.toFixed(3)),\n                btnLoad : false\n            });\n\n        })();\n    }\n\n    componentWillUnmount() {\n        this._isMount = false;\n    }\n\n    setState(params) {\n        if (this._isMount) {\n            super.setState(params);\n        }\n    }\n\n\n}\n\nexport default withStyles(styles)(Ping);\n","import React, {Component} from 'react';\nimport RTInfoCard from \"../../components/infoCard/RTInfoCard\";\nimport {Pie} from \"react-chartjs-2\";\n\nconst chartOptions = {\n    maintainAspectRatio: false,\n    legend: {\n        display: true,\n        labels : {\n            fontColor : '#ffffff'\n        },\n        position : 'bottom',\n        borderColor : '#343a40'\n    },\n    layout: {\n        padding: {\n            top: 8,\n            right : 8,\n            left : 8,\n            bottom : 15\n        }\n    }\n};\n\nclass RTPieCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRunning : true,\n            data : this.props.getData()\n        };\n    }\n\n    render() {\n        return (\n            <RTInfoCard value={this.getValue.bind(this)()} big={true} height={'29rem'}\n                        description={this.getDescription.bind(this)()} onTimeChange={this.timeChange.bind(this)}>\n                <div className=\"chart-wrapper mx-3\" style={{ height: '400px'}}>\n                    <Pie options={chartOptions} data={this.state.data} height={195}/>\n                </div>\n            </RTInfoCard>\n        )\n    }\n\n    getDescription()\n    {\n        if(this.props.description){\n            return this.props.description;\n        }\n        if(this.props.getDescription){\n            return this.props.getDescription(this.state.value);\n        }\n        else {\n            return '';\n        }\n    }\n\n    getValue() {\n        if(this.props.getValue){\n            return this.props.getValue(this.state.value);\n        }\n        else {\n            return this.props.postFix ? this.state.value + \" \" + this.props.postFix : this.state.value;\n        }\n    }\n\n    timeChange(state){\n        if(!state && this.state.isRunning){\n            clearInterval(this.state.interval);\n            this.setState({isRunning : false});\n        }\n\n        if(state && !this.state.isRunning){\n            this.process.bind(this)();\n            this.componentDidMount.bind(this)();\n        }\n    }\n\n    componentDidMount() {\n\n        const interval = setInterval(() => {\n            this.process.bind(this)();\n\n        },this.props.every || 1000);\n\n        this.setState({interval : interval,isRunning : true})\n    }\n\n    process()\n    {\n        this.setState({\n            data : this.props.getData()\n        });\n    }\n\n    componentWillUnmount() {\n        if(this.state.interval){\n            clearInterval(this.state.interval);\n        }\n    }\n}\n\nexport default RTPieCard;","import React, {Component} from 'react';\nimport RTInfoCard from \"../../components/infoCard/RTInfoCard\";\nimport {Bar} from \"react-chartjs-2\";\nimport CustomTooltips from \"../../components/chartTools/customTooltips\";\nimport {zeroCompensation} from \"../chartTools/barZeroCompensation\";\n\nclass RTSwitchBarCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.chartOptions = {\n            scaleBeginAtZero:true,\n            barBeginAtOrigin:true,\n            tooltips: {\n                enabled: false,\n                custom: CustomTooltips\n            },\n            maintainAspectRatio: false,\n            legend: {\n                display: false,\n            },\n\n            scales: {\n                xAxes: [\n                    {\n                        display: false,\n                        barPercentage: 0.8,\n                    }],\n                yAxes: [\n                    {\n                        ticks : {\n                            beginAtZero:true,\n                            suggestedMin: 0,\n                            min: 0,\n                            callback: function (value) { if (Number.isInteger(value)) { return value; } },\n                            stepSize: 1\n                        },\n                        display: true,\n                    }],\n            },\n        };\n\n        if(this.props.postFix){\n            this.chartOptions.tooltips.callbacks = {\n                label: (tooltipItems) => {\n                    return tooltipItems.yLabel + ' ' + this.props.postFix;\n                }\n            };\n        }\n\n        this.switchDefault = this.props.getSwitchDefault();\n\n        this.state = {\n            isRunning : true,\n            data : this.props.getData(this.switchDefault),\n            switch : this.switchDefault,\n            switchTooltip : this.getSwitchTooltip(this.switchDefault)\n        };\n    }\n\n    render() {\n        const {switchTooltip,data} = this.state;\n        return (\n            <RTInfoCard value={this.getValue.bind(this)()} big={true} switch={true} switchDefault={this.switchDefault}\n                        onSwitchChange={this.switchChange.bind(this)}\n                        switchTooltip={switchTooltip}\n                        height={'29rem'}\n                        description={this.getDescription.bind(this)()} onTimeChange={this.timeChange.bind(this)}>\n                <div className=\"chart-wrapper mx-3\" style={{ height: '320px'}}>\n                    <Bar options={this.chartOptions} data={data} height={500} plugins={[zeroCompensation]}\n                         redraw={this.props.redraw}\n                    />\n                </div>\n            </RTInfoCard>\n        )\n    }\n\n    getDescription()\n    {\n        if(this.props.description){\n            return this.props.description;\n        }\n        if(this.props.getDescription){\n            return this.props.getDescription(this.state.switch);\n        }\n        else {\n            return '';\n        }\n    }\n\n    getValue() {\n        if(this.props.value){\n            return this.props.value;\n        }\n        else if(this.props.getValue){\n            return this.props.getValue(this.state.value);\n        }\n        else {\n            return this.props.postFix ? this.state.value + \" \" + this.props.postFix : this.state.value;\n        }\n    }\n\n    timeChange(state){\n        if(!state && this.state.isRunning){\n            clearInterval(this.state.interval);\n            this.setState({isRunning : false});\n        }\n\n        if(state && !this.state.isRunning){\n            this.process.bind(this)();\n            this.componentDidMount.bind(this)();\n        }\n    }\n\n    switchChange(state){\n        this.setState({switch : state,switchTooltip : this.getSwitchTooltip(state)});\n        this.process();\n    }\n\n    getSwitchTooltip(state) {\n       return state ? 'On worker' : 'On server';\n    }\n\n    componentDidMount() {\n\n        const interval = setInterval(() => {\n            this.process.bind(this)();\n\n        },this.props.every || 1000);\n\n        this.setState({interval : interval,isRunning : true})\n    }\n\n    process(){\n        this.setState({\n            data : this.props.getData(this.state.switch)\n        });\n    }\n\n\n    componentWillUnmount() {\n        if(this.state.interval){\n            clearInterval(this.state.interval);\n        }\n    }\n}\n\nexport default RTSwitchBarCard;","import React, {Component} from 'react';\nimport BigRealTimeCard from \"../../../components/realTimeCardCharts/BigRealTimeCard\";\nimport DataEngine from \"../../../core/DataEngine\";\nimport RTPieCard from \"../../../components/realTimeCardCharts/RTPieCard\";\nimport RTSwitchBarCard from \"../../../components/realTimeCardCharts/RTSwitchBarCard\";\n\nconst color = ['#F47B00','#2BE162','#FF4D31','#2EAFD3','#A5F62F'];\n\nclass Clients extends Component {\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"animated fadeIn\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-lg-12\">\n                            <BigRealTimeCard redraw={true} getValue={(v) => {return v[0]}}\n                                             getData={Clients.getClientCount} maxLength={40} every={1000}\n                                             getDataLabel={Clients.getClientsConnectedDesc} getDescription={Clients.getClientsConnectedDesc}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-lg-6\">\n                            <RTPieCard getData={Clients.getPieUserGroupsData} every={1000}\n                                       getValue={Clients.getPieUserGroupsValue} description={\"User groups\"}\n                            />\n                        </div>\n                        <div className=\"col-sm-12 col-lg-6\">\n                            <RTSwitchBarCard getData={Clients.getClientDistributionData} every={1000} postFix={\"Client/s\"}\n                                       value={\"Client distribution\"} getSwitchDefault={Clients.getClientDistributionSwitchDefault}\n                                             getDescription={Clients.getClientDistributionDesc}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    static getClientDistributionDesc(state) {\n        return state ? 'On server' : 'On worker';\n    }\n\n    static getClientDistributionData(state)\n    {\n        const labels = [];\n        const data = [];\n\n        const dataEngine = DataEngine.getEngine();\n        const instances = dataEngine.storage;\n\n        if(state){\n            let i = 1;\n            for(let instanceId in instances){\n                if(instances.hasOwnProperty(instanceId)) {\n                    labels.push('Server ' + i);\n                    const workers = instances[instanceId].workers;\n                    let count = 0;\n                    for(let workerId in workers){\n                         if(workers.hasOwnProperty(workerId)){\n                             count+=workers[workerId].clientCount;\n                         }\n                    }\n                    data.push(count);\n                    i++;\n                }\n            }\n        }\n        else{\n            let instanceNum = 1;\n            for(let instanceId in instances){\n                if(instances.hasOwnProperty(instanceId)) {\n                    const workers = instances[instanceId].workers;\n                    for(let workerId in workers){\n                        if(workers.hasOwnProperty(workerId)){\n                            labels.push('Server ' + instanceNum+' - Worker '+workers[workerId].id);\n                            data.push(workers[workerId].clientCount);\n                        }\n                    }\n                    instanceNum++;\n                }\n            }\n        }\n\n        return {\n            labels: labels,\n            datasets: [{\n                backgroundColor: 'rgba(48, 153, 187,1)',\n                borderColor: 'rgba(48, 153, 187,1)',\n                data: data\n            }\n            ]\n        };\n    }\n\n    static getClientDistributionSwitchDefault() {\n        return DataEngine.getEngine().instanceCount > 1;\n    }\n\n    static getPieUserGroupsData()\n    {\n        const data = {\n            labels: [],\n            datasets: [\n                {\n                    data: [],\n                    backgroundColor: [],\n                    hoverBackgroundColor: [],\n                    borderColor : '#343a40'\n                }]\n        };\n\n        const dataEngine = DataEngine.getEngine();\n\n        const user = dataEngine.clusterInfoStorage.user;\n\n        Clients._addGroup(data,user.defaultUserGroupCount,dataEngine.defaultUserName,'#F4AB00');\n        Clients._addGroup(data,user.panelUserCount,'Panel User','#3099bb');\n\n        const auth = user.authUserGroups;\n\n        let i = 0;\n        for(let group in auth){\n            if(auth.hasOwnProperty(group)){\n                let name = group;\n                if(dataEngine.panelAuthUserMap.hasOwnProperty(group)) {\n                    name = dataEngine.panelAuthUserMap[group];\n                }\n                Clients._addGroup(data,auth[group],name,color[i]);\n            }\n            i++;\n            if(i === color.length){\n                i = 0;\n            }\n        }\n        return data;\n    }\n\n    static _addGroup(data,count,label,color)\n    {\n        data.labels.push(Clients.formatUserGroupName(label));\n        const dataset = data.datasets[0];\n        dataset.data.push(count);\n        dataset.backgroundColor.push(color);\n        dataset.hoverBackgroundColor.push(color);\n    }\n\n    static formatUserGroupName(value) {\n        if(typeof value !== 'string') return 'Unknown';\n        return value.replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase())\n    }\n\n    static getPieUserGroupsValue() {\n        //add guests and panel\n        return ((Object.keys(DataEngine.getEngine().clusterInfoStorage.user.authUserGroups).length) +2);\n    }\n\n    static getClientsConnectedDesc(v) {\n        return (v > 1 || v === 0) ? \"Clients connected\" : \"Client connected\";\n    }\n\n    static getClientCount() {\n        return [DataEngine.getEngine().clusterInfoStorage.clientCount];\n    }\n\n}\n\nexport default Clients;\n","/*\nAuthor: Luca Scaringella\nGitHub: LucaCode\n©Copyright by Luca Scaringella\n */\n\nexport default class ObjTool {\n\n    static countKeys(obj) {\n       let i = 0;\n       for(let k in obj){\n           if(obj.hasOwnProperty(k)){\n               i++;\n           }\n       }\n       return i;\n    }\n}\n","import React, {Component} from 'react';\nimport RTInfoCard from \"../infoCard/RTInfoCard\";\nimport DataEngine from \"../../core/DataEngine\";\nimport \"./rtServerInfoCard.css\";\nimport Time from \"../../core/Time\";\nimport ObjTool from \"../../core/ObjTool\";\n\nclass RTServerInfoCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.id = props.id;\n        this.dataEngine = DataEngine.getEngine();\n\n        this.state = {\n            isRunning : true,\n            data : this.process()\n        };\n    }\n\n    render() {\n        const {data} = this.state;\n        return (\n            <div className={\"tableCard main-font\"}>\n                <RTInfoCard value={\"Server Details\"} big={true} height={'29rem'} onTimeChange={this.timeChange.bind(this)}>\n                    <div className=\"chart-wrapper mx-3 table-con\">\n                        <div className={\"container-fluid\"}>\n                            <div className={\"row\"}>\n                                <div className=\"col-sm-6 col-lg-6 font1\">\n                                    <p><span id=\"blue-f\">{`Instance id    :`}</span>&#32;{data.id}</p>\n                                    <p><span id=\"blue-f\">{`Zation Server Version :`}</span>&#32;{data.zationServerVersion}</p>\n                                    <p><span id=\"blue-f\">{`Node Version   :`}</span>&#32;{data.nodeVersion}</p>\n                                    <p><span id=\"blue-f\">{`Platform       :`}</span>&#32;{data.platform}</p>\n                                    <p><span id=\"blue-f\">{`OS             :`}</span>&#32;{data.oos}</p>\n                                    <p><span id=\"blue-f\">{`CPU            :`}</span>&#32;{data.cpu}</p>\n                                    <p><span id=\"blue-f\">{`Leader         :`}</span>&#32;{data.leader}</p>\n                                    <p><span id=\"blue-f\">{`Worker         :`}</span>&#32;{data.worker}</p>\n                                    <p><span id=\"blue-f\">{`Broker         :`}</span>&#32;{data.broker}</p>\n                                    <p><span id=\"blue-f\">{`Started        :`}</span>&#32;{data.startedTime}</p>\n                                </div>\n                                <div className=\"col-sm-6 col-lg-6 font1\">\n                                    <p><span id=\"blue-f\">{`IP Address     :`}</span>&#32;{data.ip}</p>\n                                    <p><span id=\"blue-f\">{`Hostname       :`}</span>&#32;{data.hostname}</p>\n                                    <p><span id=\"blue-f\">{`Port           :`}</span>&#32;{data.port}</p>\n                                    <p><span id=\"blue-f\">{`Path           :`}</span>&#32;{data.path}</p>\n                                    <p><span id=\"blue-f\">{`App Name       :`}</span>&#32;{data.appName}</p>\n                                    <p><span id=\"blue-f\">{`License        :`}</span>&#32;{data.license}</p>\n                                    <p><span id=\"blue-f\">{`License Type   :`}</span>&#32;{data.licenseType}</p>\n                                    <p><span id=\"blue-f\">{`Secure         :`}</span>&#32;{data.secure}</p>\n                                    <p><span id=\"blue-f\">{`Debug          :`}</span>&#32;{data.debug}</p>\n                                    <p><span id=\"blue-f\">{`Drive Usage    :`}</span>&#32;{data.driveUsage}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </RTInfoCard>\n            </div>\n        )\n    }\n\n    process()\n    {\n        const data = {};\n        const instance = this.dataEngine.storage[this.id];\n        if(instance){\n            data.id = this.id;\n            data.ip = instance.ip;\n            data.hostname = instance.hostname;\n            data.port = instance.port;\n            data.path = instance.path;\n            data.secure = instance.secure ? 'yes' : 'no';\n            data.leader = instance.master.isLeader ? 'yes' : 'no';\n            data.startedTime = Time.processDate(instance.serverStartedTimestamp);\n            data.worker = ObjTool.countKeys(instance.workers);\n            data.broker = ObjTool.countKeys(instance.brokers);\n            data.oos = instance.oos;\n            data.cpu = instance.cpuModel;\n            data.appName = instance.appName;\n            data.platform = instance.platform;\n            data.debug = instance.debug ? 'yes' : 'no';\n            data.nodeVersion = instance.nodeVersion;\n            data.zationServerVersion = instance.zationServerVersion;\n            if(instance.drive){\n                data.driveUsage = instance.drive.usedPercentage + ' %';\n            }\n            else{\n                data.driveUsage = 'Unknown';\n            }\n\n            const license = instance.license;\n\n            if(license){\n                data.license = `Licensed to ${license.h} (${license.l}) (Id: ${license.i})`;\n                data.licenseType = `${license.t} License (${license.mi === -1 ? 'Unlimited instances' : \n                    `Max ${license.mi} instance${license.mi > 1 ? 's' : ''}`})`;\n            }\n            else {\n                data.license = 'No license (only for testing)';\n                data.licenseType = '/';\n            }\n        }\n        return data;\n    }\n\n    timeChange(state){\n        if(!state && this.state.isRunning){\n            clearInterval(this.state.interval);\n            this.setState({isRunning : false});\n        }\n\n        if(state && !this.state.isRunning){\n            this.process.bind(this)();\n            this.componentDidMount.bind(this)();\n        }\n    }\n\n    componentDidMount() {\n\n        const interval = setInterval(() => {\n            this.setState({\n                data : this.process()\n            });\n\n        },this.props.every || 1000);\n\n        this.setState({interval : interval,isRunning : true})\n    }\n\n    componentWillUnmount() {\n        if(this.state.interval){\n            clearInterval(this.state.interval);\n        }\n    }\n}\n\nexport default RTServerInfoCard;","import React, {Component} from 'react';\nimport RealTimeCard from \"../../../components/realTimeCardCharts/RealTimeCard\";\nimport DataEngine from \"../../../core/DataEngine\";\nimport RTTableCard from \"../../../components/realTimeCardCharts/RTTableCard\";\nimport Time from \"../../../core/Time\";\nimport {FaCheck, FaTimes} from \"react-icons/fa\";\nimport TableProgressRow from \"../../../components/chartTools/TableProgressRow\";\nimport RTServerInfoCard from \"../../../components/realTimeCardCharts/RTServerInfoCard\";\nimport TableAgeRow from \"../../../components/chartTools/TableAgeRow\";\n\nconst workerTableColumns = [\n    {title: 'Leader', field: 'leader', filtering: false, render: rowData => {\n            if(rowData.leader) {\n                return <FaCheck height={20}/>\n            }\n            else{\n                return <FaTimes height={20}/>\n            }\n        }},\n    {title: 'Id', field: 'id'},\n    {title: 'Age', field: 'age', filtering: false,render: rowData => {\n            return <TableAgeRow rowData={rowData}/>\n        }},\n    {title: 'Client/s', field: 'clientCount'},\n    {title: 'Cpu Usage', field: 'cpu', render: rowData => {\n            return (\n                <TableProgressRow progress={rowData.cpu + '%'}/>\n            );\n        }},\n    {title: 'Memory Usage', field: 'memory', render: rowData => {\n            return (\n                <TableProgressRow progress={rowData.memory + '%'}/>\n            );\n        }},\n    {title: 'Request/s', field: 'requestCount', type: 'numeric'},\n];\n\nconst brokerTableColumns = [\n    {title: 'Id', field: 'id'},\n    {title: 'Age', field: 'age', filtering: false,render: rowData => {\n            return <TableAgeRow rowData={rowData}/>\n        }},\n    {title: 'Cpu Usage', field: 'cpu', render: rowData => {\n            return (\n                <TableProgressRow progress={rowData.cpu + '%'}/>\n            );\n        }},\n    {title: 'Memory Usage', field: 'memory', render: rowData => {\n            return (\n                <TableProgressRow progress={rowData.memory + '%'}/>\n            );\n        }}\n];\n\nclass ServerDetail extends Component {\n    constructor(props){\n        super(props);\n\n        this.id = props.match.params.id\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"animated fadeIn\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-lg-12\">\n                           <RTServerInfoCard id={this.id}/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimeCard getDataLabel={ServerDetail.getClientsConnectedDesc}\n                                          getDescription={ServerDetail.getClientsConnectedDesc} maxLength={20}\n                                          getData={this.getClientsConnected.bind(this)} every={2000}/>\n                        </div>\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimeCard getDataLabel={ServerDetail.getRequestsDesc}\n                                          getDescription={ServerDetail.getRequestsDesc}\n                                          getData={this.getRequest.bind(this)} maxLength={20} every={4000} />\n                        </div>\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimeCard dataLabel={\"Cpu usage\"} description=\"Cpu usage\"\n                                          getData={this.getCpuUsage.bind(this)}\n                                          every={2000}  maxLength={20} postFix={\"%\"}\n                            />\n                        </div>\n                        <div className=\"col-sm-6 col-lg-3\">\n                            <RealTimeCard dataLabel={\"Memory usage\"} description=\"Memory usage\"\n                                          getData={this.getMemoryUsage.bind(this)}\n                                          every={2000}  maxLength={20} postFix={\"mb\"}\n                                          getValue={this.getMemoryUsageValue.bind(this)}/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-lg-12\">\n                            <RTTableCard columns={workerTableColumns} getData={this.getWorkerTableData.bind(this)} value={\"Worker\"}/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-lg-12\">\n                            <RTTableCard columns={brokerTableColumns} getData={this.getBrokerTableData.bind(this)} value={\"Broker\"}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    getBrokerTableData()\n    {\n        const dataset = [];\n        const instance = DataEngine.getEngine().storage[this.id];\n        if(instance){\n            const brokers = instance.brokers;\n            for(let bId in brokers){\n                if(brokers.hasOwnProperty(bId)) {\n                    const broker = brokers[bId];\n                    dataset.push({\n                        id : bId,\n                        age : Time.processTimeSpan(broker.brokerStartedTimestamp),\n                        started : broker.brokerStartedTimestamp,\n                        cpu : Number(broker.system.cpu).toFixed(1),\n                        memory : Number((broker.system.memory * 100) / instance.memory.totalMemMb).toFixed(1),\n                    });\n                }\n            }\n        }\n        return dataset;\n    }\n\n    getWorkerTableData()\n    {\n        const dataset = [];\n        const instance = DataEngine.getEngine().storage[this.id];\n        if(instance){\n            const workers = instance.workers;\n            for(let wId in workers){\n                if(workers.hasOwnProperty(wId)) {\n                   const worker = workers[wId];\n                   dataset.push({\n                       id : worker.id,\n                       leader : worker.id === 0,\n                       age : Time.processTimeSpan(worker.workerStartedTimestamp),\n                       started : worker.workerStartedTimestamp,\n                       clientCount : worker.clientCount,\n                       cpu :  Number(worker.cpu).toFixed(1),\n                       memory : Number((worker.memory * 100) / instance.memory.totalMemMb).toFixed(1),\n                       requestCount : (worker.httpRequests + worker.wsRequests)\n                   });\n                }\n            }\n        }\n        return dataset;\n    }\n\n    getMemoryUsageValue(current) {\n        return Number((current / DataEngine.getEngine().storage[this.id].memory.totalMemMb) * 100).toFixed(1) + ' %';\n    }\n\n    getMemoryUsage() {\n        return Number(DataEngine.getEngine().storage[this.id].memory.usedMemMb).toFixed(0);\n    }\n\n    getCpuUsage() {\n        return Number(DataEngine.getEngine().storage[this.id].cpu).toFixed(1);\n    }\n\n    static getClientsConnectedDesc(v) {\n        return (v > 1 || v === 0) ? \"Clients connected\" : \"Client connected\";\n    }\n\n    static getRequestsDesc(v) {\n        return (v > 1 || v === 0) ? \"Requests\" : \"Request\";\n    }\n\n    getRequest()\n    {\n        const instance = DataEngine.getEngine().storage[this.id];\n        let count = 0;\n        if(instance){\n            const workers = instance.workers;\n            for(let wId in workers){\n                if(workers.hasOwnProperty(wId)) {\n                    count+=workers[wId].httpRequests;\n                    count+=workers[wId].wsRequests;\n                }\n            }\n        }\n        return count;\n    }\n\n    getClientsConnected(){\n        const instance = DataEngine.getEngine().storage[this.id];\n        let count = 0;\n        if(instance){\n            const workers = instance.workers;\n            for(let wId in workers){\n                if(workers.hasOwnProperty(wId)) {\n                    count+=workers[wId].clientCount;\n                }\n            }\n        }\n        return count;\n    }\n\n}\n\nexport default ServerDetail;\n","import React, {Component} from 'react';\nimport logo from '../../../assets/image/zationLogo.svg';\nimport {Navbar} from 'react-bootstrap';\nimport './MainPanel.css';\nimport Sidebar from \"../../../components/sidebar/Sidebar\";\nimport DataEngine from \"../../../core/DataEngine\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport Server from \"../servers/Server\";\nimport Button from \"react-bootstrap/es/Button\";\nimport avatar from './../../../assets/image/user.svg';\nimport {client} from 'zation-client';\nimport Ping from \"../ping/Ping\";\nimport Clients from \"../clients/Clients\";\nimport Chart from 'chart.js';\nimport ServerDetail from \"../servers/ServerDetail\";\nimport {devMode} from \"../../../mode\";\nimport PathTool from \"../../../core/PathTool\";\n\nChart.defaults.global.animation.duration = 1000;\n//Chart.defaults.global.animation.easing = 'easeInQuad';\n\nclass MainPanel extends Component {\n\n    constructor(props) {\n        super(props);\n\n        try {\n            const payload = client.tokenPayload;\n            this.state = {name: payload != null ? payload['ZATION-PANEL-USER-NAME'] : 'Unknown'};\n\n            DataEngine.getEngine().setTaskProcessClusterInfo();\n            DataEngine.getEngine().processClusterInfo();\n        }\n        catch (e) {\n            this.state = {name: 'Unknown name'};\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"App transition-item detail-page sidebar-lg-show sidebar-fixed\">\n                    <header className=\"app-header\">\n                        <Navbar className={\"navbar\"} bg=\"dark\" variant=\"dark\">\n                            <Button className=\"navbar-toggler sidebar-toggler d-lg-none mr-auto\"\n                                    onClick={this.switchSidebar.bind(this)}>\n\n                            <span className=\"navbar-toggler-icon\">\n                            </span>\n                            </Button>\n                            <Navbar.Brand href=\"#home\" className=\"sm-auto logoCo\">\n                                <img\n                                    alt=\"\"\n                                    src={logo}\n                                    width=\"30\"\n                                    height=\"30\"\n                                    className=\"d-inline-block align-top\"\n                                />\n                                {' Zation'}\n                            </Navbar.Brand>\n                            <div className=\"profile\">\n                            <span className=\"name\">\n                                {this.state.name}\n                                </span>\n                                <li className=\"nav-item dropdown account-switch\">\n                                    <a className=\"nav-link nav-link\" href=\"/\" onClick={this.switchAccountDropDown.bind(this)}>\n                                        <img src={avatar} alt={'user'} width=\"30\" height=\"30\" className=\"account-switch\"/>\n                                    </a>\n                                    <div id=\"account-dropdown-menu\"\n                                         className=\"dropdown-menu dropdown-menu-right animated fadeIn account-switch\">\n                                        <div className=\"dropdown-header text-center account-switch\">\n                                            <strong className=\"account-switch\">\n                                                Account\n                                            </strong>\n                                        </div>\n                                        <div className=\"dropdown-item account-switch\" onClick={this.logout.bind(this)}>\n                                            <i className=\"fa fa-lock\"/>\n                                            Logout\n                                        </div>\n                                    </div>\n                                </li>\n                            </div>\n                        </Navbar>\n                    </header>\n                    <Sidebar/>\n                    <main className=\"main\">\n                        <Route exact path={PathTool.mainPath+\"/\"} component={Dashboard}/>\n                        <Route exact path={PathTool.mainPath+\"/ping\"} component={Ping}/>\n                        <Route exact path={PathTool.mainPath+\"/clients\"} component={Clients}/>\n                        <Route exact path={PathTool.mainPath+\"/server\"} component={Server}/>\n                        <Route exact path={PathTool.mainPath+\"/server/:id\"} component={ServerDetail}/>\n                    </main>\n                </div>\n            </Router>\n        )\n    }\n\n    componentDidMount() {\n        document.getElementsByTagName('body')[0].addEventListener('click',(event) => {\n            this.offAccountDropDown(event);\n        });\n    }\n\n    // noinspection JSMethodCanBeStatic\n    switchSidebar() {\n        document.getElementsByTagName('body')[0].classList.toggle('sidebar-show');\n    }\n\n    // noinspection JSMethodCanBeStatic\n    switchAccountDropDown(event) {\n        event.preventDefault();\n        document.getElementById('account-dropdown-menu').classList.toggle('show');\n    }\n\n    // noinspection JSMethodCanBeStatic\n    offAccountDropDown(event) {\n        if(!event.target.classList.contains('account-switch')) {\n            const accountDropdown = document.getElementById('account-dropdown-menu');\n            if (accountDropdown && accountDropdown.classList.contains('show')) {\n                accountDropdown.classList.remove('show');\n            }\n        }\n    }\n\n    // noinspection JSMethodCanBeStatic\n    async logout() {\n        try{\n            await client.deauthenticate();\n        }\n        catch (e) {}\n        if(devMode){\n            window.location.pathname = '';\n        }\n        else{\n            window.location.pathname = PathTool.getMainPath(window.location.pathname);\n        }\n\n    }\n\n}\n\nexport default MainPanel;\n","import React, {Component} from 'react';\nimport RCenter from 'react-center';\nimport './Error.css';\nimport Fab from \"@material-ui/core/es/Fab/Fab\";\nimport {Refresh, Warning} from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport PathTool from \"../../core/PathTool\";\n\nconst styles = theme => ({\n    fab: {\n        margin: theme.spacing.unit\n    },\n    extendedIcon: {\n        marginRight: theme.spacing.unit,\n    },\n});\n\nclass Error extends Component\n{\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className=\"App transition-item detail-page darkTheme\">\n                <RCenter className={\"fullHeight\"}>\n                    <div className={'ErrorContainer'}>\n                        <Warning className={'warningIcon bounceInDown animated'}/>\n                        <h1>{this.props.message}</h1>\n                        <Fab variant=\"extended\" aria-label=\"Delete\" onClick={this.reload} className={'btn '+classes.fab}>\n                            <Refresh className={classes.extendedIcon} />\n                            Try again\n                        </Fab>\n                    </div>\n                </RCenter>\n            </div>\n        );\n    }\n\n    // noinspection JSMethodCanBeStatic\n    reload() {\n        window.location.pathname = PathTool.mainPath;\n    }\n}\n\nexport default withStyles(styles)(Error);\n\n","/*\nAuthor: Luca Scaringella\nGitHub: LucaCode\n©Copyright by Luca Scaringella\n */\n\nimport {client}        from \"zation-client\";\n\nexport default class PingEngine {\n\n    static startPing(intervalMs = 4000,key = 'default') {\n        PingEngine.interval = setInterval(async () => {\n            try {\n                if(client.hasPanelAccess()) {\n                    await client.transmit('#panel').send();\n                }\n            }\n            catch (e) {}\n        },intervalMs);\n    }\n}\n\n","import React, {Component} from 'react';\nimport {create, client, ConnectionAbortError} from \"zation-client\";\nimport {devMode} from \"./mode\";\nimport Loading from \"./views/loading/Loading\";\nimport Login from \"./views/login/Login\";\nimport MainPanel from \"./views/panel/main/MainPanel\";\nimport Error from \"./views/error/Error\";\nimport DataEngine from \"./core/DataEngine\";\nimport PingEngine from \"./core/PingEngine\";\nimport PathTool from \"./core/PathTool\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode : 'start',\n            errorMessage : ''\n        };\n    }\n\n    render() {\n        if(this.state.mode === 'start' || this.state.mode === 'loadPanel') {\n            return <Loading app={this}/>\n        }\n        else if(this.state.mode === 'auth'){\n            return <Login app={this}/>\n        }\n        else if(this.state.mode === 'panel') {\n            return <MainPanel app={this}/>\n        }\n        else if(this.state.mode === 'error'){\n            return <Error app={this} message={this.state.errorMessage}/>;\n        }\n    }\n\n    async loadPanel() {\n        this.setState({mode : 'loadPanel'});\n\n        const panelCh = client.channel('#panel');\n        await panelCh.subscribe();\n\n        //connect to dataEngine and create\n        DataEngine.getEngine().connect(panelCh);\n\n        await client.transmit('#panel',true).send();\n\n        //wait 3000 ms for worker can respond\n        setTimeout(() => {\n\n            //create ping interval (worker know that panel is still in use)\n            PingEngine.startPing();\n\n            this.setState({mode : 'panel'});\n        },3000);\n    }\n\n    toAuth() {\n        if(this.state.mode === 'start') {\n            setTimeout(() => {\n                this.setState({mode : 'auth'});\n            },1500);\n        }\n        else{\n            this.setState({mode : 'auth'});\n        }\n    }\n\n    setError(msg){\n        if(this.state.mode === 'start') {\n            setTimeout(() => {\n                this.setState({mode : 'error', errorMessage : msg});\n            },1500);\n        }\n        else{\n            this.setState({mode : 'error', errorMessage : msg});\n        }\n    }\n\n    componentDidMount() {\n        this._isMount = true;\n        if(this.state.mode === 'start') {\n            (async () => {\n                const client = create(!devMode ? {\n                    hostname : window.location.hostname,\n                    port :  parseInt(window.location.port),\n                    secure : (window.location.protocol === 'https:'),\n                    rejectUnauthorized : false,\n                    debug : false\n                } : {port : 3001,debug : true},true);\n\n                client.eventReact().onDisconnect(() => {\n                    setTimeout(()=> {\n                        if(!client.isConnected()) {\n                            this.setError('The connection to the server is lost.');\n                        }\n                    },5000)\n                });\n\n                client.eventReact().onServerDeauthenticate(() => {\n                    this.toAuth();\n                });\n\n                try {\n                    await client.connect();\n\n                    const payload = client.tokenPayload;\n                    if( client.hasPanelAccess() &&\n                        payload != null && payload['ZATION-PANEL-USER-NAME'] != null\n                    ) {\n                        (async () => {\n                            await this.loadPanel();\n                        })();\n                    }\n                    else {\n                        this.toAuth();\n                    }\n\n                }\n                catch (e) {\n                    if(e instanceof ConnectionAbortError) {\n                        this.setError('Could not connect to the server.');\n                    }\n                    else {\n                        this.setError('Unknown error occurred');\n                    }\n                }\n\n            })();\n        }\n    }\n\n    componentWillMount() {\n        if(devMode){\n            if(window.location.pathname !== '/') {\n                window.location.pathname = '';\n            }\n        }\n        else {\n            if(PathTool.isNotMainPath(window.location.pathname)) {\n                window.location.pathname = PathTool.getMainPath(window.location.pathname);\n            }\n            PathTool.mainPath = PathTool.getMainPath(window.location.pathname);\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMount = false;\n    }\n\n    setState(params) {\n        if (this._isMount) {\n            super.setState(params);\n        }\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport './assets/libs/animate.css'\nimport './assets/libs/all.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}